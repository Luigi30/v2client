DISTATE                         Source Listing                   9-MAY-2021 23:42:46  VSI C V7.4-002-50R2O              Page 1
V1.0                                                             8-MAY-2021 19:11:16  distate.c;2

	      1 /*
	      2  ** THIS SOFTWARE IS SUBJECT TO COPYRIGHT PROTECTION AND IS OFFERED ONLY
	      3  ** PURSUANT TO THE 3DFX GLIDE GENERAL PUBLIC LICENSE. THERE IS NO RIGHT
	      4  ** TO USE THE GLIDE TRADEMARK WITHOUT PRIOR WRITTEN PERMISSION OF 3DFX
	      5  ** INTERACTIVE, INC. A COPY OF THIS LICENSE MAY BE OBTAINED FROM THE 
	      6  ** DISTRIBUTOR OR BY CONTACTING 3DFX INTERACTIVE INC(info@3dfx.com). 
	      7  ** THIS PROGRAM IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER 
	      8  ** EXPRESSED OR IMPLIED. SEE THE 3DFX GLIDE GENERAL PUBLIC LICENSE FOR A
	      9  ** FULL TEXT OF THE NON-WARRANTY PROVISIONS.  
	     10  ** 
	     11  ** USE, DUPLICATION OR DISCLOSURE BY THE GOVERNMENT IS SUBJECT TO
	     12  ** RESTRICTIONS AS SET FORTH IN SUBDIVISION (C)(1)(II) OF THE RIGHTS IN
	     13  ** TECHNICAL DATA AND COMPUTER SOFTWARE CLAUSE AT DFARS 252.227-7013,
	     14  ** AND/OR IN SIMILAR OR SUCCESSOR CLAUSES IN THE FAR, DOD OR NASA FAR
	     15  ** SUPPLEMENT. UNPUBLISHED RIGHTS RESERVED UNDER THE COPYRIGHT LAWS OF
	     16  ** THE UNITED STATES.  
	     17  ** 
	     18  ** COPYRIGHT 3DFX INTERACTIVE, INC. 1999, ALL RIGHTS RESERVED
	     19  * 
	     20  * 17    1/13/98 12:42p Atai
	     21  * fixed grtexinfo, grVertexLayout, and draw triangle
	     22  * 
	     23  * 16    1/10/98 4:01p Atai
	     24  * inititialize vertex layout, viewport, added defines
	     25  * 
	     26  * 15    1/05/98 6:06p Atai
	     27  * glide extension stuff
	     28  * 
	     29  * 14    12/17/97 4:05p Atai
	     30  * added grChromaRange(), grGammaCorrecionRGB(), grRest(), and grGet()
	     31  * functions
	     32  * 
	     33  * 13    12/16/97 11:38a Atai
	     34  * added grChromaRange()
	     35  * 
	     36  * 12    12/15/97 5:52p Atai
	     37  * disable obsolete glide2 api for glide3
	     38  * 
	     39  * 10    12/12/97 1:30p Atai
	     40  * remove fp z  buffer
	     41  * 
	     42  * 8     12/08/97 10:44a Atai
	     43  * added entry point for grCoordinateSpace(), grDepthRange(), and
	     44  * grViewport()
	     45  * 
	     46  * 7     11/13/97 4:38p Atai
	     47  * invalidate lfbMode and c0c1
	     48  * 
	     49  * 6     11/10/97 5:20p Atai
	     50  * added factor for grAlphaCombine and remove extra  _grChromakeyMode
	     51  * 
	     52  * 5     11/07/97 11:22a Atai
	     53  * remove GR_*_SMOOTH. use GR_SMOOTH
	     54  * 
	     55  * 4     10/15/97 7:33a Dow
	     56  * Made _grValidateState use central routine for writing data
	     57  * 

DISTATE                         Source Listing                   9-MAY-2021 23:42:46  VSI C V7.4-002-50R2O              Page 2
V1.0                                                             8-MAY-2021 19:11:16  distate.c;2

	     58  * 3     10/14/97 4:18p Atai
	     59  * added grEnable and grDisable
	     60  * 
	     61  * 2     10/10/97 2:57p Dow
	     62  * Minor adjustments
	     63  * 
	     64  * 1     10/09/97 5:19p Dow
	     65  * State Monster file
	     66  */
	     67 
	     68 int x; // make the compiler happy on VMS
	     69 
       X     70 #ifdef GLIDE3
       X     71 
       X     72 #include <3dfx.h>
       X     73 #include <glidesys.h>
       X     74 
       X     75 #define FX_DLL_DEFINITION
       X     76 #include <fxdll.h>
       X     77 #include <glide.h>
       X     78 #include "fxglide.h"
       X     79 
       X     80 /*=============================================================================
       X     81 **  Replacement state routines.
       X     82 **
       X     83 **  These routines store away their arguments, and mark a piece of glide state
       X     84 **  as invalid.  The next time a rendering primitive is called, the state will
       X     85 **  be invalid, and grValidateState will be called.  See that routine for more
       X     86 **  info.
       X     87 **===========================================================================*/
       X     88 
       X     89 /*
       X     90    Some macros for use in this file only
       X     91  */
       X     92 
       X     93 #define STOREARG(function, arg) \
       X     94 gc->state.stateArgs.##function##Args.arg = arg
       X     95 
       X     96 #define LOADARG(function, arg) \
       X     97 gc->state.stateArgs.##function##Args.arg
       X     98 
       X     99 #define INVALIDATE(regset) \
       X    100 gc->state.invalid |= ##regset##BIT
       X    101 
       X    102 #define NOTVALID(regset) \
       X    103 (gc->state.invalid & ##regset##BIT)
       X    104 
       X    105 #define SETVALID(regset) \
       X    106 (gc->state.invalid &= ~(##regset##BIT))
       X    107 
       X    108 #define ENABLEMODE(mode) \
       X    109 gc->state.grEnableArgs.##mode## = GR_MODE_ENABLE;
       X    110 
       X    111 #define DISABLEMODE(mode) \
       X    112 gc->state.grEnableArgs.##mode## = GR_MODE_DISABLE;
       X    113 
       X    114 /*-------------------------------------------------------------------

DISTATE                         Source Listing                   9-MAY-2021 23:42:46  VSI C V7.4-002-50R2O              Page 3
V1.0                                                             8-MAY-2021 19:11:16  distate.c;2

       X    115   Function: grAlphaBlendFunction
       X    116   Date: 06-Oct-97
       X    117   Implementor(s): dow
       X    118   Description:
       X    119   Inform Glide that the Alpha Blend Function has been modified.
       X    120   Arguments:
       X    121   
       X    122   Return:
       X    123   -------------------------------------------------------------------*/
       X    124 GR_DIENTRY(grAlphaBlendFunction, void , (GrAlphaBlendFnc_t rgb_sf, GrAlphaBlendFnc_t rgb_df, GrAlphaBlendFnc_t alpha
       X    124 _sf, GrAlphaBlendFnc_t alpha_df) )
       X    125 {
       X    126  #define FN_NAME "grAlphaBlendFunction"
       X    127   GR_BEGIN_NOFIFOCHECK(FN_NAME, 87);
       X    128 
       X    129   /* Invalidate AlphaMode */
       X    130   INVALIDATE(alphaMode);
       X    131 
       X    132   STOREARG(grAlphaBlendFunction, rgb_sf);
       X    133   STOREARG(grAlphaBlendFunction, rgb_df);
       X    134   STOREARG(grAlphaBlendFunction, alpha_sf);
       X    135   STOREARG(grAlphaBlendFunction, alpha_df);
       X    136 
       X    137  #undef FN_NAME
       X    138 } /* grAlphaBlendFunction */
       X    139 
       X    140 /*-------------------------------------------------------------------
       X    141   Function: grAlphaTestFunction
       X    142   Date: 06-Oct-97
       X    143   Implementor(s): dow
       X    144   Description:
       X    145   
       X    146   Arguments:
       X    147   
       X    148   Return:
       X    149   -------------------------------------------------------------------*/
       X    150 GR_DIENTRY(grAlphaTestFunction, void , (GrCmpFnc_t fnc) )
       X    151 {
       X    152  #define FN_NAME "grAlphaTestFunction"
       X    153   GR_BEGIN_NOFIFOCHECK(FN_NAME, 87);
       X    154 
       X    155   /* Invalidate AlphaMode */
       X    156   INVALIDATE(alphaMode);
       X    157 
       X    158   STOREARG(grAlphaTestFunction, fnc);
       X    159 
       X    160  #undef FN_NAME
       X    161 } /* grAlphaTestFunction */
       X    162 
       X    163 /*-------------------------------------------------------------------
       X    164   Function: grAlphaTestReferenceValue
       X    165   Date: 06-Oct-97
       X    166   Implementor(s): dow
       X    167   Description:
       X    168   
       X    169   Arguments:
       X    170   

DISTATE                         Source Listing                   9-MAY-2021 23:42:46  VSI C V7.4-002-50R2O              Page 4
V1.0                                                             8-MAY-2021 19:11:16  distate.c;2

       X    171   Return:
       X    172   -------------------------------------------------------------------*/
       X    173 GR_DIENTRY(grAlphaTestReferenceValue, void , (GrAlpha_t value) )
       X    174 {
       X    175  #define FN_NAME "grAlphaTestReferenceValue"
       X    176   GR_BEGIN_NOFIFOCHECK(FN_NAME, 87);
       X    177 
       X    178   INVALIDATE(alphaMode);
       X    179 
       X    180   STOREARG(grAlphaTestReferenceValue,value);
       X    181 
       X    182  #undef FN_NAME
       X    183 } /* grAlphaTestReferenceValue */
       X    184 
       X    185 /*-------------------------------------------------------------------
       X    186   Function: grAlphaCombine
       X    187   Date: 06-Oct-97
       X    188   Implementor(s): dow
       X    189   Description:
       X    190   
       X    191   Arguments:
       X    192   
       X    193   Return:
       X    194   -------------------------------------------------------------------*/
       X    195 GR_DIENTRY(grAlphaCombine, void ,
       X    196          (GrCombineFunction_t function, GrCombineFactor_t factor, 
       X    197           GrCombineLocal_t local, GrCombineOther_t other, FxBool invert) )
       X    198 {
       X    199  #define FN_NAME "grAlphaCombine"
       X    200   GR_BEGIN_NOFIFOCHECK(FN_NAME, 85);
       X    201 
       X    202   INVALIDATE(fbzColorPath);
       X    203 
       X    204   STOREARG(grAlphaCombine, function);
       X    205   STOREARG(grAlphaCombine, factor);
       X    206   STOREARG(grAlphaCombine, local);
       X    207   STOREARG(grAlphaCombine, other);
       X    208   STOREARG(grAlphaCombine, invert);
       X    209 
       X    210  #undef FN_NAME
       X    211 } /* grAlphaCombine */
       X    212 
       X    213 /*-------------------------------------------------------------------
       X    214   Function: grAlphaControlsITRGBLighting
       X    215   Date: 07-Oct-97
       X    216   Implementor(s): dow
       X    217   Description:
       X    218   
       X    219   Arguments:
       X    220   
       X    221   Return:
       X    222   -------------------------------------------------------------------*/
       X    223 GR_DIENTRY(grAlphaControlsITRGBLighting, void , (FxBool enable) )
       X    224 {
       X    225 #define FN_NAME "grAlphaControlsITRGBLighting"
       X    226   GR_BEGIN_NOFIFOCHECK("grAlphaControlsITRGBLighting",85);
       X    227 

DISTATE                         Source Listing                   9-MAY-2021 23:42:46  VSI C V7.4-002-50R2O              Page 5
V1.0                                                             8-MAY-2021 19:11:16  distate.c;2

       X    228   INVALIDATE(fbzColorPath);
       X    229 
       X    230   STOREARG(grAlphaControlsITRGBLighting, enable);
       X    231 
       X    232 #undef FN_NAME
       X    233 } /* grAlphaControlsITRGBLighting */
       X    234 
       X    235 /*-------------------------------------------------------------------
       X    236   Function: grColorCombine
       X    237   Date: 07-Oct-97
       X    238   Implementor(s): dow
       X    239   Description:
       X    240   
       X    241   Arguments:
       X    242   
       X    243   Return:
       X    244   -------------------------------------------------------------------*/
       X    245 GR_DIENTRY(grColorCombine, void , (GrCombineFunction_t function,
       X    246                                    GrCombineFactor_t factor,
       X    247                                    GrCombineLocal_t local,
       X    248                                    GrCombineOther_t other, FxBool invert) )
       X    249 {
       X    250 #define FN_NAME "grColorCombine"
       X    251   GR_BEGIN_NOFIFOCHECK("grColorCombine",85);
       X    252 
       X    253   INVALIDATE(fbzColorPath);
       X    254 
       X    255   STOREARG(grColorCombine, function);
       X    256   STOREARG(grColorCombine, factor);
       X    257   STOREARG(grColorCombine, local);
       X    258   STOREARG(grColorCombine, other);
       X    259   STOREARG(grColorCombine, invert);
       X    260 
       X    261 #undef FN_NAME
       X    262 } /* grColorCombine */
       X    263 
       X    264 
       X    265 /*-------------------------------------------------------------------
       X    266   Function: grChromakeyMode
       X    267   Date: 07-Oct-97
       X    268   Implementor(s): dow
       X    269   Description:
       X    270   
       X    271   Arguments:
       X    272   
       X    273   Return:
       X    274   -------------------------------------------------------------------*/
       X    275 GR_DIENTRY(grChromakeyMode, void , (GrChromakeyMode_t mode) )
       X    276 {
       X    277 #define FN_NAME "grChromakeyMode"
       X    278   GR_BEGIN_NOFIFOCHECK("grChromakeyMode",85);
       X    279 
       X    280   INVALIDATE(fbzMode);
       X    281 
       X    282   STOREARG(grChromakeyMode, mode);
       X    283 
       X    284 #undef FN_NAME

DISTATE                         Source Listing                   9-MAY-2021 23:42:46  VSI C V7.4-002-50R2O              Page 6
V1.0                                                             8-MAY-2021 19:11:16  distate.c;2

       X    285 } /* grChromakeyMode */
       X    286 
       X    287 #if defined(GLIDE3) && defined(GLIDE3_ALPHA)
       X    288 /*-------------------------------------------------------------------
       X    289   Function: grChromaModeExt
       X    290   Date: 05-Jan-98
       X    291   Implementor(s): atai
       X    292   Description:
       X    293   
       X    294   Arguments:
       X    295   
       X    296   Return:
       X    297   -------------------------------------------------------------------*/
       X    298 void _grChromaModeExt(GrChromakeyMode_t mode)
       X    299 {
       X    300 #define FN_NAME "_grChromaModeExt"
       X    301   GR_BEGIN_NOFIFOCHECK("_grChromaModeExt",85);
       X    302 
       X    303   INVALIDATE(fbzMode);
       X    304 
       X    305   STOREARG(grChromakeyMode, mode);
       X    306 
       X    307 #undef FN_NAME
       X    308 } /* _grChromaModeExt */
       X    309 
       X    310 /*-------------------------------------------------------------------
       X    311   Function: _grChromaRangeExt
       X    312   Date: 15-Dec-97
       X    313   Implementor(s): atai
       X    314   Description:
       X    315   
       X    316   Arguments:
       X    317   
       X    318   Return:
       X    319   -------------------------------------------------------------------*/
       X    320 void _grChromaRangeExt(GrColor_t color, GrColor_t range, GrChromaRangeMode_t mode)
       X    321 {
       X    322 #define FN_NAME "_grChromaRangeExt"
       X    323   GR_BEGIN_NOFIFOCHECK("_grChromaRangeExt",85);
       X    324 
       X    325   GR_CHECK_F(myName,
       X    326              (_GlideRoot.hwConfig.SSTs[_GlideRoot.current_sst].type != GR_SSTTYPE_Voodoo2),
       X    327              "grChromaRange not supported.");
       X    328 
       X    329   INVALIDATE(chromaKey);
       X    330 
       X    331   STOREARG(grChromakeyValue, color);
       X    332   STOREARG(grChromaRange, range);
       X    333   STOREARG(grChromaRange, mode);
       X    334 
       X    335 #undef FN_NAME
       X    336 } /* _grChromaRangeExt */
       X    337 #endif
       X    338 
       X    339 /*-------------------------------------------------------------------
       X    340   Function: grChromakeyValue
       X    341   Date: 09-Oct-97

DISTATE                         Source Listing                   9-MAY-2021 23:42:46  VSI C V7.4-002-50R2O              Page 7
V1.0                                                             8-MAY-2021 19:11:16  distate.c;2

       X    342   Implementor(s): dow
       X    343   Description:
       X    344   
       X    345   Arguments:
       X    346   
       X    347   Return:
       X    348   -------------------------------------------------------------------*/
       X    349 GR_ENTRY(grChromakeyValue, void , (GrColor_t color) )
       X    350 {
       X    351 #define FN_NAME "grChromakeyValue"
       X    352   GR_BEGIN_NOFIFOCHECK("grChromakeyMode",85);
       X    353 
       X    354   INVALIDATE(chromaKey);
       X    355 
       X    356   STOREARG(grChromakeyValue, color);
       X    357 
       X    358 #undef FN_NAME
       X    359 } /* grChromakeyValue */
       X    360 
       X    361 /*-------------------------------------------------------------------
       X    362   Function: grDeptMask
       X    363   Date: 07-Oct-97
       X    364   Implementor(s): dow
       X    365   Description:
       X    366   
       X    367   Arguments:
       X    368   
       X    369   Return:
       X    370   -------------------------------------------------------------------*/
       X    371 GR_DIENTRY(grDepthMask, void , (FxBool enable) )
       X    372 {
       X    373  #define FN_NAME "grDepthMask"
       X    374 
       X    375   GR_BEGIN_NOFIFOCHECK(FN_NAME, 85);
       X    376 
       X    377   INVALIDATE(fbzMode);
       X    378 
       X    379   STOREARG(grDepthMask, enable);
       X    380 
       X    381  #undef FN_NAME
       X    382 } /* grDeptMask */
       X    383 
       X    384 
       X    385 /*-------------------------------------------------------------------
       X    386   Function: grDepthBufferFunction
       X    387   Date: 07-Oct-97
       X    388   Implementor(s): dow
       X    389   Description:
       X    390   
       X    391   Arguments:
       X    392   
       X    393   Return:
       X    394   -------------------------------------------------------------------*/
       X    395 GR_DIENTRY(grDepthBufferFunction, void , (GrCmpFnc_t fnc) )
       X    396 {
       X    397  #define FN_NAME "grDepthBufferFunction"
       X    398   GR_BEGIN_NOFIFOCHECK(FN_NAME, 85);

DISTATE                         Source Listing                   9-MAY-2021 23:42:46  VSI C V7.4-002-50R2O              Page 8
V1.0                                                             8-MAY-2021 19:11:16  distate.c;2

       X    399 
       X    400   INVALIDATE(fbzMode);
       X    401 
       X    402   STOREARG(grDepthBufferFunction, fnc);
       X    403 
       X    404  #undef FN_NAME
       X    405 } /* grDepthBufferFunction */
       X    406 
       X    407 
       X    408 /*-------------------------------------------------------------------
       X    409   Function: grDepthBufferMode
       X    410   Date: 07-Oct-97
       X    411   Implementor(s): dow
       X    412   Description:
       X    413   
       X    414   Arguments:
       X    415   
       X    416   Return:
       X    417   -------------------------------------------------------------------*/
       X    418 GR_DIENTRY(grDepthBufferMode, void , (GrDepthBufferMode_t mode) )
       X    419 {
       X    420  #define FN_NAME "grDepthBufferMode"
       X    421 
       X    422   GR_BEGIN_NOFIFOCHECK(FN_NAME, 85);
       X    423 
       X    424   INVALIDATE(fbzMode);
       X    425 
       X    426   STOREARG(grDepthBufferMode, mode);
       X    427 
       X    428  #undef FN_NAME
       X    429 } /* grDepthBufferMode */
       X    430 
       X    431 
       X    432 /*-------------------------------------------------------------------
       X    433   Function: grDitherMode
       X    434   Date: 07-Oct-97
       X    435   Implementor(s): dow
       X    436   Description:
       X    437   
       X    438   Arguments:
       X    439   
       X    440   Return:
       X    441   -------------------------------------------------------------------*/
       X    442 GR_DIENTRY(grDitherMode, void , (GrDitherMode_t mode) )
       X    443 {
       X    444  #define FN_NAME "grDitherMode"
       X    445 
       X    446   GR_BEGIN_NOFIFOCHECK(FN_NAME, 85);
       X    447 
       X    448   INVALIDATE(fbzMode);
       X    449 
       X    450   STOREARG(grDitherMode, mode);
       X    451 
       X    452  #undef FN_NAME
       X    453 } /* grDitherMode */
       X    454 
       X    455 /*-------------------------------------------------------------------

DISTATE                         Source Listing                   9-MAY-2021 23:42:46  VSI C V7.4-002-50R2O              Page 9
V1.0                                                             8-MAY-2021 19:11:16  distate.c;2

       X    456   Function: grRenderBuffer
       X    457   Date: 07-Oct-97
       X    458   Implementor(s): dow
       X    459   Description:
       X    460   
       X    461   Arguments:
       X    462   
       X    463   Return:
       X    464   -------------------------------------------------------------------*/
       X    465 GR_DIENTRY(grRenderBuffer, void , (GrBuffer_t buffer) )
       X    466 {
       X    467  #define FN_NAME "grRenderBuffer"
       X    468 
       X    469   GR_BEGIN_NOFIFOCHECK(FN_NAME, 85);
       X    470 
       X    471   INVALIDATE(fbzMode);
       X    472 
       X    473   STOREARG(grRenderBuffer, buffer);
       X    474 
       X    475  #undef FN_NAME
       X    476 } /* grRenderBuffer */
       X    477 
       X    478 /*-------------------------------------------------------------------
       X    479   Function: grColorMask
       X    480   Date: 08-Oct-97
       X    481   Implementor(s): dow
       X    482   Description:
       X    483   
       X    484   Arguments:
       X    485   
       X    486   Return:
       X    487   -------------------------------------------------------------------*/
       X    488 GR_ENTRY(grColorMask, void , (FxBool rgb, FxBool alpha) )
       X    489 {
       X    490 #define FN_NAME "grColorMask"
       X    491 
       X    492   GR_BEGIN_NOFIFOCHECK(FN_NAME, 85);
       X    493 
       X    494   INVALIDATE(fbzMode);
       X    495 
       X    496   STOREARG(grColorMask, rgb);
       X    497   STOREARG(grColorMask, alpha);
       X    498 
       X    499 
       X    500 #undef FN_NAME
       X    501 } /* grColorMask */
       X    502 
       X    503 /*-------------------------------------------------------------------
       X    504   Function: grSstOrigin
       X    505   Date: 08-Oct-97
       X    506   Implementor(s): dow
       X    507   Description:
       X    508   
       X    509   Arguments:
       X    510   
       X    511   Return:
       X    512   -------------------------------------------------------------------*/

DISTATE                         Source Listing                   9-MAY-2021 23:42:46  VSI C V7.4-002-50R2O              Page 10
V1.0                                                             8-MAY-2021 19:11:16  distate.c;2

       X    513 GR_DIENTRY(grSstOrigin, void , (GrOriginLocation_t origin) )
       X    514 {
       X    515  #define FN_NAME "grSstOrigin"
       X    516   GR_BEGIN_NOFIFOCHECK(FN_NAME, 83);
       X    517 
       X    518   INVALIDATE(chromaKey);
       X    519 
       X    520   STOREARG(grSstOrigin, origin);
       X    521 
       X    522 #undef FN_NAME
       X    523 } /* grSstOrigin */
       X    524 
       X    525 /*-------------------------------------------------------------------
       X    526   Function: grClipWindow
       X    527   Date: 08-Oct-97
       X    528   Implementor(s): dow
       X    529   Description:
       X    530   
       X    531   Arguments:
       X    532   
       X    533   Return:
       X    534   -------------------------------------------------------------------*/
       X    535 GR_DIENTRY(grClipWindow, void , (FxU32 minx, FxU32 miny, FxU32 maxx,
       X    536                                FxU32 maxy) ) 
       X    537 {
       X    538 #define FN_NAME "grClipWindow"
       X    539 
       X    540   GR_BEGIN_NOFIFOCHECK(FN_NAME, 83);
       X    541 
       X    542   INVALIDATE(clipRegs);
       X    543 
       X    544   STOREARG(grClipWindow, minx);
       X    545   STOREARG(grClipWindow, miny);
       X    546   STOREARG(grClipWindow, maxx);
       X    547   STOREARG(grClipWindow, maxy);
       X    548 
       X    549 #undef FN_NAME
       X    550 } /* grClipWindow */
       X    551 
       X    552 /*-------------------------------------------------------------------
       X    553   Function: grDepthBiasLevel
       X    554   Date: 08-Oct-97
       X    555   Implementor(s): dow
       X    556   Description:
       X    557   
       X    558   Arguments:
       X    559   
       X    560   Return:
       X    561   -------------------------------------------------------------------*/
       X    562 GR_DIENTRY(grDepthBiasLevel, void , (FxI16 level) )
       X    563 {
       X    564 #define FN_NAME "grDepthBiasLevel"
       X    565 
       X    566   GR_BEGIN_NOFIFOCHECK(FN_NAME, 83);
       X    567 
       X    568   INVALIDATE(zaColor);
       X    569 

DISTATE                         Source Listing                   9-MAY-2021 23:42:46  VSI C V7.4-002-50R2O              Page 11
V1.0                                                             8-MAY-2021 19:11:16  distate.c;2

       X    570   STOREARG(grDepthBiasLevel, level);
       X    571 
       X    572 #undef FN_NAME
       X    573 } /* grDepthBiasLevel */
       X    574 
       X    575 
       X    576 /*-------------------------------------------------------------------
       X    577   Function: grFogMode
       X    578   Date: 08-Oct-97
       X    579   Implementor(s): dow
       X    580   Description:
       X    581   
       X    582   Arguments:
       X    583   
       X    584   Return:
       X    585   -------------------------------------------------------------------*/
       X    586 GR_DIENTRY(grFogMode, void , (GrFogMode_t mode) )
       X    587 {
       X    588 #define FN_NAME "grFogMode"
       X    589 
       X    590   GR_BEGIN_NOFIFOCHECK(FN_NAME, 83);
       X    591 
       X    592   INVALIDATE(fogMode);
       X    593 
       X    594   STOREARG(grFogMode, mode);
       X    595 
       X    596 #undef FN_NAME
       X    597 } /* grFogMode */
       X    598 
       X    599 
       X    600 /*-------------------------------------------------------------------
       X    601   Function: grFogColorValue
       X    602   Date: 08-Oct-97
       X    603   Implementor(s): dow
       X    604   Description:
       X    605   
       X    606   Arguments:
       X    607   
       X    608   Return:
       X    609   -------------------------------------------------------------------*/
       X    610 GR_DIENTRY(grFogColorValue, void , (GrColor_t color) )
       X    611 {
       X    612 #define FN_NAME "grFogColorValue"
       X    613   GR_BEGIN_NOFIFOCHECK(FN_NAME, 83);
       X    614 
       X    615   INVALIDATE(fogColor);
       X    616 
       X    617   STOREARG(grFogColorValue, color);
       X    618 
       X    619 #undef FN_NAME
       X    620 } /* grFogColorValue */
       X    621 
       X    622 /*-------------------------------------------------------------------
       X    623   Function: grLfbWriteColorFormat
       X    624   Date: 08-Oct-97
       X    625   Implementor(s): dow
       X    626   Description:

DISTATE                         Source Listing                   9-MAY-2021 23:42:46  VSI C V7.4-002-50R2O              Page 12
V1.0                                                             8-MAY-2021 19:11:16  distate.c;2

       X    627   
       X    628   Arguments:
       X    629   
       X    630   Return:
       X    631   -------------------------------------------------------------------*/
       X    632 GR_DIENTRY(grLfbWriteColorFormat, void , (GrColorFormat_t colorFormat) )
       X    633 {
       X    634 #define FN_NAME "grLfbWriteColorFormat"
       X    635 
       X    636   GR_BEGIN_NOFIFOCHECK(FN_NAME, 82);
       X    637 
       X    638   INVALIDATE(lfbMode);
       X    639 
       X    640   STOREARG(grLfbWriteColorFormat, colorFormat);
       X    641 
       X    642 #undef FN_NAME
       X    643 } /* grLfbWriteColorFormat */
       X    644 
       X    645 /*-------------------------------------------------------------------
       X    646   Function: grLfbWriteColorSwizzle
       X    647   Date: 08-Oct-97
       X    648   Implementor(s): dow
       X    649   Description:
       X    650   
       X    651   Arguments:
       X    652   
       X    653   Return:
       X    654   -------------------------------------------------------------------*/
       X    655 GR_DIENTRY(grLfbWriteColorSwizzle, void , (FxBool swizzleBytes, FxBool
       X    656                                          swapWords) ) 
       X    657 {
       X    658 #define FN_NAME "grLfbWriteColorSwizzle"
       X    659   GR_BEGIN_NOFIFOCHECK(FN_NAME, 82);
       X    660 
       X    661   INVALIDATE(lfbMode);
       X    662 
       X    663   STOREARG(grLfbWriteColorSwizzle, swizzleBytes);
       X    664   STOREARG(grLfbWriteColorSwizzle, swapWords);
       X    665 
       X    666 #undef FN_NAME
       X    667 } /* grLfbWriteColorSwizzle */
       X    668 
       X    669 
       X    670 /*-------------------------------------------------------------------
       X    671   Function: grConstantColorValue
       X    672   Date: 08-Oct-97
       X    673   Implementor(s): dow
       X    674   Description:
       X    675   
       X    676   Arguments:
       X    677   
       X    678   Return:
       X    679   -------------------------------------------------------------------*/
       X    680 GR_DIENTRY(grConstantColorValue, void , (GrColor_t color) )
       X    681 {
       X    682 #define FN_NAME "grConstantColorValue"
       X    683 

DISTATE                         Source Listing                   9-MAY-2021 23:42:46  VSI C V7.4-002-50R2O              Page 13
V1.0                                                             8-MAY-2021 19:11:16  distate.c;2

       X    684   GR_BEGIN_NOFIFOCHECK(FN_NAME, 85);
       X    685 
       X    686   INVALIDATE(c0c1);
       X    687 
       X    688   STOREARG(grConstantColorValue, color);
       X    689 
       X    690 #undef FN_NAME
       X    691 } /* grConstantColorValue */
       X    692 
       X    693 
       X    694 /*==========================================================================*/
       X    695 
       X    696 
       X    697 /*-------------------------------------------------------------------
       X    698   Function: grValidateState
       X    699   Date: 08-Oct-97
       X    700   Implementor(s): dow
       X    701   Description:
       X    702   State Validation:
       X    703   Once a rendering primitive has determined that the state is invalid,
       X    704   it calls this routine.  grValidateState then goes through valid
       X    705   markers and flushes all invalid state.
       X    706   -------------------------------------------------------------------*/
       X    707 void
       X    708 _grValidateState()
       X    709 {
       X    710 #define FN_NAME "_grValidateState"
       X    711 
       X    712   GR_BEGIN_NOFIFOCHECK(FN_NAME, 85);
       X    713 
       X    714   if (NOTVALID(alphaMode)) {
       X    715     _grAlphaBlendFunction(LOADARG(grAlphaBlendFunction, rgb_sf),
       X    716                           LOADARG(grAlphaBlendFunction, rgb_df),
       X    717                           LOADARG(grAlphaBlendFunction, alpha_sf),
       X    718                           LOADARG(grAlphaBlendFunction, alpha_df));
       X    719     _grAlphaTestFunction(LOADARG(grAlphaTestFunction, fnc));
       X    720     _grAlphaTestReferenceValue(LOADARG(grAlphaTestReferenceValue, value));
       X    721 
       X    722   }
       X    723 
       X    724   if (NOTVALID(fbzColorPath)) {
       X    725     _grAlphaCombine(LOADARG(grAlphaCombine, function),
       X    726                     LOADARG(grAlphaCombine, factor),
       X    727                     LOADARG(grAlphaCombine, local),
       X    728                     LOADARG(grAlphaCombine, other),
       X    729                     LOADARG(grAlphaCombine, invert));
       X    730     _grAlphaControlsITRGBLighting(LOADARG(grAlphaControlsITRGBLighting,
       X    731                                           enable)); 
       X    732     _grColorCombine(LOADARG(grColorCombine, function), 
       X    733                     LOADARG(grColorCombine, factor),
       X    734                     LOADARG(grColorCombine, local),
       X    735                     LOADARG(grColorCombine, other),
       X    736                     LOADARG(grColorCombine, invert));
       X    737 
       X    738   }
       X    739 
       X    740   if (NOTVALID(fbzMode)) {

DISTATE                         Source Listing                   9-MAY-2021 23:42:46  VSI C V7.4-002-50R2O              Page 14
V1.0                                                             8-MAY-2021 19:11:16  distate.c;2

       X    741     _grChromakeyMode(LOADARG(grChromakeyMode, mode));
       X    742     _grDepthMask(LOADARG(grDepthMask, enable));
       X    743     _grDepthBufferFunction(LOADARG(grDepthBufferFunction, fnc));
       X    744     _grDepthBufferMode(LOADARG(grDepthBufferMode, mode));
       X    745     _grDitherMode(LOADARG(grDitherMode, mode));
       X    746     _grRenderBuffer(LOADARG(grRenderBuffer, buffer));
       X    747     _grColorMask(LOADARG(grColorMask, rgb), LOADARG(grColorMask, alpha));
       X    748     _grSstOrigin(LOADARG(grSstOrigin, origin));
       X    749 
       X    750   }
       X    751 
       X    752   if (NOTVALID(chromaKey)) {
       X    753 #if defined(GLIDE3) && defined(GLIDE3_ALPHA)
       X    754     _grChromaRangeExt(LOADARG(grChromakeyValue, color),LOADARG(grChromaRange, range)
       X    755                       , LOADARG(grChromaRange, mode));
       X    756 
       X    757 #else
       X    758     _grChromakeyValue(LOADARG(grChromakeyValue, color));
       X    759 #endif
       X    760   }
       X    761 
       X    762   if (NOTVALID(clipRegs)) {
       X    763     _grClipWindow(
       X    764                   LOADARG(grClipWindow, minx),
       X    765                   LOADARG(grClipWindow, miny),
       X    766                   LOADARG(grClipWindow, maxx),
       X    767                   LOADARG(grClipWindow, maxy));
       X    768   }
       X    769 
       X    770   if (NOTVALID(zaColor)) {
       X    771     _grDepthBiasLevel((FxI16) LOADARG(grDepthBiasLevel, level));
       X    772   }
       X    773 
       X    774   if (NOTVALID(fogMode)) {
       X    775     _grFogMode(LOADARG(grFogMode, mode));
       X    776   }
       X    777 
       X    778   if (NOTVALID(fogColor)) {
       X    779     _grFogColorValue(LOADARG(grFogColorValue, color));
       X    780   }
       X    781 
       X    782   if (NOTVALID(lfbMode)) {
       X    783     _grLfbWriteColorFormat(LOADARG(grLfbWriteColorFormat, colorFormat));
       X    784     _grLfbWriteColorSwizzle(LOADARG(grLfbWriteColorSwizzle, swizzleBytes),
       X    785                             LOADARG(grLfbWriteColorSwizzle, swapWords));
       X    786 
       X    787   }
       X    788 
       X    789   if (NOTVALID(c0c1)) {
       X    790     _grConstantColorValue(LOADARG(grConstantColorValue, color));
       X    791   }
       X    792 
       X    793   _grUpdateParamIndex();
       X    794 
       X    795   _grFlushCommonStateRegs();
       X    796 
       X    797 #undef FN_NAME

DISTATE                         Source Listing                   9-MAY-2021 23:42:46  VSI C V7.4-002-50R2O              Page 15
V1.0                                                             8-MAY-2021 19:11:16  distate.c;2

       X    798 } /* _grValidateState */
       X    799 
       X    800 #define IARRAY(p,i)    (*((FxU32 *)(p)+(i)))
       X    801 
       X    802 /*-------------------------------------------------------------------
       X    803   Function: grEnable
       X    804   Date: 10-Oct-97
       X    805   Implementor(s): atai
       X    806   Description:
       X    807   
       X    808   Arguments:
       X    809   
       X    810   Return:
       X    811   -------------------------------------------------------------------*/
       X    812 GR_DIENTRY(grEnable, void , (GrEnableMode_t mode) )
       X    813 {
       X    814 #define FN_NAME "grEnable"
       X    815   GR_BEGIN_NOFIFOCHECK(FN_NAME, 85);
       X    816 
       X    817   switch (mode) {
       X    818   case GR_AA_ORDERED:
       X    819     ENABLEMODE(primitive_smooth_mode);
       X    820     break;
       X    821   case GR_SHAMELESS_PLUG:
       X    822     ENABLEMODE(shameless_plug_mode);
       X    823     _GlideRoot.environment.shamelessPlug = mode;
       X    824     break;
       X    825   case GR_VIDEO_SMOOTHING:
       X    826     ENABLEMODE(video_smooth_mode);
       X    827     break;
       X    828   case GR_ALLOW_MIPMAP_DITHER:
       X    829     gc->state.allowLODdither = GR_MODE_ENABLE;
       X    830     break;
       X    831   }
       X    832 
       X    833 #undef FN_NAME
       X    834 } /* grEnable */
       X    835 
       X    836 /*-------------------------------------------------------------------
       X    837   Function: grDisable
       X    838   Date: 10-Oct-97
       X    839   Implementor(s): atai
       X    840   Description:
       X    841   
       X    842   Arguments:
       X    843   
       X    844   Return:
       X    845   -------------------------------------------------------------------*/
       X    846 GR_DIENTRY(grDisable, void , (GrEnableMode_t mode) )
       X    847 {
       X    848 #define FN_NAME "grDisable"
       X    849   GR_BEGIN_NOFIFOCHECK(FN_NAME, 85);
       X    850 
       X    851   switch (mode) {
       X    852   case GR_AA_ORDERED:
       X    853     DISABLEMODE(primitive_smooth_mode);
       X    854     break;

DISTATE                         Source Listing                   9-MAY-2021 23:42:46  VSI C V7.4-002-50R2O              Page 16
V1.0                                                             8-MAY-2021 19:11:16  distate.c;2

       X    855   case GR_SHAMELESS_PLUG:
       X    856     DISABLEMODE(shameless_plug_mode);
       X    857     break;
       X    858   case GR_VIDEO_SMOOTHING:
       X    859     DISABLEMODE(video_smooth_mode);
       X    860     break;
       X    861   case GR_ALLOW_MIPMAP_DITHER:
       X    862     gc->state.allowLODdither = GR_MODE_DISABLE;
       X    863     break;
       X    864   }
       X    865 
       X    866 #undef FN_NAME
       X    867 } /* grDisable */
       X    868 
       X    869 /*-------------------------------------------------------------------
       X    870   Function: grCoordinateSpace
       X    871   Date: 01-Dec-97
       X    872   Implementor(s): atai
       X    873   Description:
       X    874   
       X    875   Arguments:
       X    876   
       X    877   Return:
       X    878   -------------------------------------------------------------------*/
       X    879 GR_DIENTRY(grCoordinateSpace, void , (GrCoordinateSpaceMode_t mode) )
       X    880 {
       X    881 #define FN_NAME "grCoordinateSpace"
       X    882   GR_BEGIN_NOFIFOCHECK(FN_NAME, 85);
       X    883 
       X    884   switch (mode) {
       X    885   case GR_WINDOW_COORDS:
       X    886     gc->state.grCoordinateSpaceArgs.coordinate_space_mode = GR_WINDOW_COORDS;
       X    887     break;
       X    888   case GR_CLIP_COORDS:
       X    889     gc->state.grCoordinateSpaceArgs.coordinate_space_mode = GR_CLIP_COORDS;
       X    890     break;
       X    891   }
       X    892 
       X    893 #undef FN_NAME
       X    894 } /* grCoordinateSpace */
       X    895 
       X    896 /*-------------------------------------------------------------------
       X    897   Function: grDepthRange
       X    898   Date: 01-Dec-97
       X    899   Implementor(s): atai
       X    900   Description:
       X    901   
       X    902   Arguments:
       X    903   
       X    904   Return:
       X    905   -------------------------------------------------------------------*/
       X    906 GR_DIENTRY(grDepthRange, void , (FxFloat n, FxFloat f) )
       X    907 {
       X    908 #define FN_NAME "grDepthRange"
       X    909   GR_BEGIN_NOFIFOCHECK(FN_NAME, 85);
       X    910 
       X    911   gc->state.Viewport.n = n;

DISTATE                         Source Listing                   9-MAY-2021 23:42:46  VSI C V7.4-002-50R2O              Page 17
V1.0                                                             8-MAY-2021 19:11:16  distate.c;2

       X    912   gc->state.Viewport.f  = f;
       X    913   gc->state.Viewport.hdepth = (f - n) * 0.5f * 65535.f;
       X    914   gc->state.Viewport.oz = (f + n) * 0.5f * 65535.f;
       X    915 
       X    916 #undef FN_NAME
       X    917 } /* grDepthRange */
       X    918 
       X    919 /*-------------------------------------------------------------------
       X    920   Function: grViewport
       X    921   Date: 01-Dec-97
       X    922   Implementor(s): atai
       X    923   Description:
       X    924   
       X    925   Arguments:
       X    926   
       X    927   Return:
       X    928   -------------------------------------------------------------------*/
       X    929 GR_DIENTRY(grViewport, void , (FxI32 x, FxI32 y, FxI32 width, FxI32 height) )
       X    930 {
       X    931 #define FN_NAME "grViewport"
       X    932   GR_BEGIN_NOFIFOCHECK(FN_NAME, 85);
       X    933 
       X    934     gc->state.Viewport.ox      = (FxFloat)(x + width * 0.5f);
       X    935     gc->state.Viewport.oy      = (FxFloat)(y + height *0.5f);
       X    936     gc->state.Viewport.hwidth  = width * 0.5f;
       X    937     gc->state.Viewport.hheight = height * 0.5f;
       X    938 
       X    939 #undef FN_NAME
       X    940 } /* grViewport */
       X    941 
       X    942 #endif /* GLIDE3 */


Command Line
------- ----

CC/DEBUG/NOOP/LIST=[.OUT.DEBUG.OBJ.GLIDE.GLIDE2X.CVG.GLIDE.SRC]DISTATE/OBJECT=[
.OUT.DEBUG.OBJ.GLIDE.GLIDE2X.CVG.GLIDE.SRC]DISTATE.OBJ/INCLUDE_DIRECTORY=([.GLI
DE.SWLIBS.FXMISC],[.GLIDE.GLIDE2X.CVG.INCSRC],[.GLIDE.GLIDE2X.CVG.GLIDE.SRC],[.
GLIDE.GLIDE2X.CVG.INIT],[.GLIDE.SWLIBS.NEWPCI.PCILIB])/DEFINE=(CVG,GLIDE_USE_C_
TRISETUP,GLIDE_HW_TRI_SETUP=1,GLIDE_TRI_CULLING=1,GLIDE_DEFAULT_GAMMA=1.3F,GLID
E_LIB=1) [.GLIDE.GLIDE2X.CVG.GLIDE.SRC]DISTATE.C

Hardware: /ARCHITECTURE=GENERIC /OPTIMIZE=TUNE=GENERIC

These macros are in effect at the start of the compilation.
----- ------ --- -- ------ -- --- ----- -- --- ------------

 __G_FLOAT=1  __DECC=1  vms=1  VMS=1  __32BITS=1  __PRAGMA_ENVIRONMENT=1 
 __CRTL_VER=80400000  __vms_version="V8.4-2L1"  CC$gfloat=1  __X_FLOAT=1 
 GLIDE_HW_TRI_SETUP=1  GLIDE_USE_C_TRISETUP=1  vms_version="V8.4-2L1" 
 __DATE__="May  9 2021"  __STDC_VERSION__=199901L  __DECC_MODE_RELAXED=1 
 __DECC_VER=70490002  __VMS=1  GLIDE_DEFAULT_GAMMA=1.3F  GLIDE_LIB=1 
 __ALPHA=1  VMS_VERSION="V8.4-2L1"  __IEEE_FLOAT=0  __VMS_VERSION="V8.4-2L1" 
 __TIME__="23:42:46"  __Alpha_AXP=1  __VMS_VER=80421222 
 __BIASED_FLT_ROUNDS=2  CVG=1  __INITIAL_POINTER_SIZE=0  __STDC__=2 
 __LANGUAGE_C__=1  __vms=1  __alpha=1  __D_FLOAT=0  GLIDE_TRI_CULLING=1 
