FPU                             Source Listing                   9-MAY-2021 23:42:50  VSI C V7.4-002-50R2O              Page 1
V1.0                                                             8-MAY-2021 19:15:01  fpu.c;2

	      1 /*
	      2  * FPU handling code
	      3  */
	      4 
	      5 /*
	      6  * This routine sets the precision to single which effects all
	      7  * adds, mults, and divs.
	      8  */
       X      9 #if defined(__i386__) || defined(__x86_64__) || defined(_M_IX86)
       X     10 void single_precision_asm()
       X     11 {
       X     12 #if defined(__MSC__)
       X     13   __asm {
       X     14     push  eax       ; make room
       X     15     fnclex          ; clear pending exceptions
       X     16     fstcw WORD PTR [esp]
       X     17     mov   eax, DWORD PTR [esp]
       X     18     and   eax, 0000fcffh  ; clear bits 9:8
       X     19     mov   DWORD PTR [esp], eax
       X     20     fldcw WORD PTR [esp]
       X     21     pop   eax
       X     22     }
       X     23 #elif defined(__GNUC__)
       X     24   asm("push %eax\n"
       X     25       "fnclex\n"
       X     26       "fstcw (%esp)\n"
       X     27       "movl (%esp), %eax\n"
       X     28       "and $0x0000fcff, %eax\n"
       X     29       "movl %eax, (%esp)\n"
       X     30       "fldcw (%esp)\n"
       X     31       "pop %eax");
       X     32 #else
       X     33 #error "Need to implement single_precision_asm() for this compiler"
       X     34 #endif
       X     35 }
       X     36 #else
	     37 //#warning "Using a stub for single_precision_asm() for this architecture"
	     38 void single_precision_asm()
      1	     39 {
      1	     40 }
	     41 #endif
	     42 
	     43 /*
	     44  * This routine sets the precision to double which effects all
	     45  * adds, mults, and divs.
	     46  */
       X     47 #if defined(__i386__) || defined(__x86_64__) || defined(_M_IX86)
       X     48 void double_precision_asm()
       X     49 {
       X     50 #if defined(__MSC__)
       X     51   __asm {
       X     52     push  eax       ; make room
       X     53     fnclex          ; clear pending exceptions
       X     54     fstcw WORD PTR [esp]
       X     55     mov   eax, DWORD PTR [esp]
       X     56     and   eax, 0000fcffh  ; clear bits 9:8
       X     57     or    eax, 000002ffh  ; set 9:8 to 10

FPU                             Source Listing                   9-MAY-2021 23:42:50  VSI C V7.4-002-50R2O              Page 2
V1.0                                                             8-MAY-2021 19:15:01  fpu.c;2

       X     58     mov   DWORD PTR [esp], eax
       X     59     fldcw WORD PTR [esp]
       X     60     pop   eax
       X     61     }
       X     62 #elif defined(__GNUC__)
       X     63   asm("push %eax\n"
       X     64       "fnclex\n"
       X     65       "fstcw (%esp)\n"
       X     66       "movl (%esp), %eax\n"
       X     67       "and $0x0000fcff, %eax\n"
       X     68       "or $0x000002ff, %eax\n"
       X     69       "movl %eax, (%esp)\n"
       X     70       "fldcw (%esp)\n"
       X     71       "pop %eax");
       X     72 #else
       X     73 #error "Need to implement double_precision_asm() for this compiler"
       X     74 #endif
       X     75 }
       X     76 #else
	     77 //#warning "Using a stub for double_precision_asm() for this architecture"
	     78 void double_precision_asm()
      1	     79 {
      1	     80 }
	     81 #endif


Command Line
------- ----

CC/DEBUG/NOOP/LIST=[.OUT.DEBUG.OBJ.GLIDE.GLIDE2X.CVG.GLIDE.SRC]FPU/OBJECT=[.OUT
.DEBUG.OBJ.GLIDE.GLIDE2X.CVG.GLIDE.SRC]FPU.OBJ/INCLUDE_DIRECTORY=([.GLIDE.SWLIB
S.FXMISC],[.GLIDE.GLIDE2X.CVG.INCSRC],[.GLIDE.GLIDE2X.CVG.GLIDE.SRC],[.GLIDE.GL
IDE2X.CVG.INIT],[.GLIDE.SWLIBS.NEWPCI.PCILIB])/DEFINE=(CVG,GLIDE_USE_C_TRISETUP
,GLIDE_HW_TRI_SETUP=1,GLIDE_TRI_CULLING=1,GLIDE_DEFAULT_GAMMA=1.3F,GLIDE_LIB=1)
 [.GLIDE.GLIDE2X.CVG.GLIDE.SRC]FPU.C

Hardware: /ARCHITECTURE=GENERIC /OPTIMIZE=TUNE=GENERIC

These macros are in effect at the start of the compilation.
----- ------ --- -- ------ -- --- ----- -- --- ------------

 __G_FLOAT=1  __DECC=1  vms=1  VMS=1  __32BITS=1  __PRAGMA_ENVIRONMENT=1 
 __CRTL_VER=80400000  __vms_version="V8.4-2L1"  CC$gfloat=1  __X_FLOAT=1 
 GLIDE_HW_TRI_SETUP=1  GLIDE_USE_C_TRISETUP=1  vms_version="V8.4-2L1" 
 __DATE__="May  9 2021"  __STDC_VERSION__=199901L  __DECC_MODE_RELAXED=1 
 __DECC_VER=70490002  __VMS=1  GLIDE_DEFAULT_GAMMA=1.3F  GLIDE_LIB=1 
 __ALPHA=1  VMS_VERSION="V8.4-2L1"  __IEEE_FLOAT=0  __VMS_VERSION="V8.4-2L1" 
 __TIME__="23:42:50"  __Alpha_AXP=1  __VMS_VER=80421222 
 __BIASED_FLT_ROUNDS=2  CVG=1  __INITIAL_POINTER_SIZE=0  __STDC__=2 
 __LANGUAGE_C__=1  __vms=1  __alpha=1  __D_FLOAT=0  GLIDE_TRI_CULLING=1 

