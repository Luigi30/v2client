GUTEX                           Source Listing                   9-MAY-2021 23:43:10  VSI C V7.4-002-50R2O              Page 1
V1.0                                                             2-FEB-2021 02:11:10  gutex.c;1

	      1 /*
	      2 ** THIS SOFTWARE IS SUBJECT TO COPYRIGHT PROTECTION AND IS OFFERED ONLY
	      3 ** PURSUANT TO THE 3DFX GLIDE GENERAL PUBLIC LICENSE. THERE IS NO RIGHT
	      4 ** TO USE THE GLIDE TRADEMARK WITHOUT PRIOR WRITTEN PERMISSION OF 3DFX
	      5 ** INTERACTIVE, INC. A COPY OF THIS LICENSE MAY BE OBTAINED FROM THE 
	      6 ** DISTRIBUTOR OR BY CONTACTING 3DFX INTERACTIVE INC(info@3dfx.com). 
	      7 ** THIS PROGRAM IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER 
	      8 ** EXPRESSED OR IMPLIED. SEE THE 3DFX GLIDE GENERAL PUBLIC LICENSE FOR A
	      9 ** FULL TEXT OF THE NON-WARRANTY PROVISIONS.  
	     10 ** 
	     11 ** USE, DUPLICATION OR DISCLOSURE BY THE GOVERNMENT IS SUBJECT TO
	     12 ** RESTRICTIONS AS SET FORTH IN SUBDIVISION (C)(1)(II) OF THE RIGHTS IN
	     13 ** TECHNICAL DATA AND COMPUTER SOFTWARE CLAUSE AT DFARS 252.227-7013,
	     14 ** AND/OR IN SIMILAR OR SUCCESSOR CLAUSES IN THE FAR, DOD OR NASA FAR
	     15 ** SUPPLEMENT. UNPUBLISHED RIGHTS RESERVED UNDER THE COPYRIGHT LAWS OF
	     16 ** THE UNITED STATES.  
	     17 ** 
	     18 ** COPYRIGHT 3DFX INTERACTIVE, INC. 1999, ALL RIGHTS RESERVED
	     19 **
	     20 ** 
	     21 ** 22    2/20/98 5:31p Peter
	     22 ** crybaby glide
	     23 ** 
	     24 ** 21    2/20/98 11:00a Peter
	     25 ** removed glide3 from glid2 tree
	     26  * 
	     27  * 20    1/07/98 10:22a Peter
	     28  * lod dithering env var
	     29  * 
	     30  * 19    1/06/98 6:47p Atai
	     31  * undo grSplash and remove gu routines
	     32  * 
	     33  * 18    12/17/97 4:45p Peter
	     34  * groundwork for CrybabyGlide
	     35  * 
	     36  * 17    12/02/97 9:49a Dow
	     37  * rid the world of the "Setting the same state twice" message
	     38  * 
	     39  * 16    11/20/97 6:59p Dow
	     40  * Fixed baseAddress for Banshee (the Devil's Own Test still uses guTex
	     41  * Stuff).
	     42  * 
	     43  * 15    11/18/97 4:36p Peter
	     44  * chipfield stuff cleanup and w/ direct writes
	     45  * 
	     46  * 14    11/17/97 4:55p Peter
	     47  * watcom warnings/chipfield stuff
	     48  * 
	     49  * 13    11/03/97 3:43p Peter
	     50  * h3/cvg cataclysm
	     51  * 
	     52  * 12    9/15/97 7:31p Peter
	     53  * more cmdfifo cleanup, fixed normal buffer clear, banner in the right
	     54  * place, lfb's are on, Hmmmm.. probably more
	     55  * 
	     56  * 11    9/04/97 3:32p Peter
	     57  * starting grouping serial reg writes

GUTEX                           Source Listing                   9-MAY-2021 23:43:10  VSI C V7.4-002-50R2O              Page 2
V1.0                                                             2-FEB-2021 02:11:10  gutex.c;1

	     58  * 
	     59  * 10    6/06/97 10:47a Peter
	     60  * texture downloading, fixed 640x480 dimension, changed cvg dep to be the
	     61  * same as sst1
	     62  * 
	     63  * 9     5/27/97 1:16p Peter
	     64  * Basic cvg, w/o cmd fifo stuff. 
	     65  * 
	     66  * 8     5/21/97 6:05a Peter
	     67  * 
	     68  * 7     3/04/97 9:08p Dow
	     69  * 
	     70  * 6     12/23/96 1:37p Dow
	     71  * chagnes for multiplatform glide
	     72  * 
	     73  * 5     11/18/96 9:14a Sellers
	     74  * added checking for crossing of 2 MByte texture boundry
	     75 **
	     76 */
	     77 
	     78 #include <string.h>
	   1077 #include <3dfx.h>
	   1208 #define FX_DLL_DEFINITION
	   1209 #include <fxdll.h>
	   1330 #include <glide.h>
	   3272 #include "fxglide.h"
	  14616 
	  14617 /* externals from gtex.c and gtexdl.c */
	  14618 extern FxU32 _grMipMapHostSize[][16];
	  14619 extern FxU32 _gr_aspect_index_table[];
	  14620 extern FxU32 _gr_aspect_xlate_table[];
	  14621 extern FxU32 _gr_evenOdd_xlate_table[];
	  14622 
	  14623 /*---------------------------------------------------------------------------
	  14624 ** guTexSource
	  14625 */
	  14626 
	  14627 GR_ENTRY(guTexSource, void, (GrMipMapId_t mmid))
      1	  14628 {
      1	  14629 #define FN_NAME "guTexSource"
      1	  14630   FxU32               texMode, tLod;
      1	  14631   FxU32               oldtexMode;
      1	  14632   FxU32               baseAddress;
      1	  14633   int                 tmu;
      1	  14634   const GrMipMapInfo *mminfo;
      1	  14635 
      1	  14636   GR_BEGIN_NOFIFOCHECK("guTexSource",99);
      1	  14637   GDBG_INFO_MORE(gc->myLevel,"(%d)\n",mmid);
      1	  14638 
      1	  14639   /* Make sure that mmid is not NULL */
      1	  14640   if (mmid == GR_NULL_MIPMAP_HANDLE) return;
      1	  14641 
      1	  14642   /* get a pointer to the relevant GrMipMapInfo struct */
      1	  14643   mminfo = &gc->mm_table.data[mmid];
      1	  14644   tmu = mminfo->tmu;
      1	  14645 
      1	  14646   GR_CHECK_TMU(FN_NAME, tmu);

GUTEX                           Source Listing                   9-MAY-2021 23:43:10  VSI C V7.4-002-50R2O              Page 3
V1.0                                                             2-FEB-2021 02:11:10  gutex.c;1

      1	  14647 
      1	  14648   gc->state.current_mm[tmu] = mmid;
      1	  14649 
      1	  14650   /* Set up new glide state for this mmid */
      1	  14651   gc->state.tmu_config[tmu].mmMode =  mminfo->mipmap_mode;
      1	  14652   gc->state.tmu_config[tmu].smallLod = mminfo->lod_min;
      1	  14653   gc->state.tmu_config[tmu].largeLod = mminfo->lod_max;
      1	  14654   gc->state.tmu_config[tmu].evenOdd =  mminfo->odd_even_mask;
      1	  14655   gc->state.tmu_config[tmu].nccTable = 0;
      1	  14656 
      1	  14657   /* Set up base address, texMode, and tLod registers */
      1X  14658 #if (GLIDE_PLATFORM & GLIDE_HW_H3)
      1X  14659   baseAddress = mminfo->tmu_base_address + 0x200000;
      1X  14660 #else
      1	  14661   baseAddress = mminfo->tmu_base_address >> 3;
      1	  14662 #endif
      1	  14663   texMode     = mminfo->tTextureMode;
      1	  14664   tLod        = mminfo->tLOD;
      1	  14665 
      1	  14666   oldtexMode = gc->state.tmu_config[tmu].textureMode;
      1	  14667   oldtexMode &= ~(SST_TFORMAT | SST_TCLAMPT | 
      1	  14668                   SST_TCLAMPS | SST_TNCCSELECT | 
      1	  14669                   SST_TLODDITHER | SST_TCLAMPW | 
      1	  14670                   SST_TMAGFILTER | SST_TMINFILTER | 
      1	  14671                   SST_TRILINEAR);
      1	  14672   texMode |= oldtexMode;
      1	  14673   if (!gc->state.allowLODdither) texMode &= ~SST_TLODDITHER;
      1	  14674 
      1	  14675   /* Download the NCC table, if needed. */
      1	  14676   if ((mminfo->format == GR_TEXFMT_YIQ_422) ||
      2	  14677       (mminfo->format == GR_TEXFMT_AYIQ_8422)) {
      2	  14678     int table;                    /* ncc table we'll use */
      2	  14679 
      2	  14680     /* See if it's already down there */
      3	  14681     if (gc->tmu_state[tmu].ncc_mmids[0] == mmid) {
      3	  14682       /* Table 0 has what we need, so make it current */
      3	  14683       table = 0;
      3	  14684     } else if (gc->tmu_state[tmu].ncc_mmids[1] == mmid) {
      3	  14685       /* Table 1 has what we need, so make it current */
      3	  14686       table = 1;
      3	  14687     } else {
      3	  14688       /*
      3	  14689       **  it's not down there, so we need to pick the table and
      3	  14690       **  download it
      3	  14691       */
      3	  14692       /* Which table should we use? */
      3	  14693       table = gc->tmu_state[tmu].next_ncc_table;
      3	  14694 
      3	  14695       /* Download NCC table */
      3	  14696       _grTexDownloadNccTable(tmu, table, &mminfo->ncc_table, 0, 11);
      3	  14697 
      3	  14698       /* Set the mmid so we known it's down there */
      3	  14699       gc->tmu_state[tmu].ncc_mmids[table] = mmid;
      3	  14700 
      3	  14701       /* Set the state to know which table was the LRA */
      3	  14702       gc->tmu_state[tmu].next_ncc_table = (table == 0 ? 1 : 0);
      2	  14703     } /* we had to download it */

GUTEX                           Source Listing                   9-MAY-2021 23:43:10  VSI C V7.4-002-50R2O              Page 4
V1.0                                                             2-FEB-2021 02:11:10  gutex.c;1

      2	  14704 
      2	  14705     /*
      2	  14706     **  Setting the TNCCSelect bit to 0 selects table 0, setting it to 1
      2	  14707     **  selects table 1
      2	  14708     */
      2	  14709     if (table == 0)
      2	  14710       texMode &= ~(SST_TNCCSELECT);
      2	  14711     else
      2	  14712       texMode |= SST_TNCCSELECT;
      1	  14713   } /* if it's an NCC texture */
      1	  14714 
      1	  14715   /* Force LOD dithering if the user asked for it.
      1	  14716    *
      1	  14717    * NB: There is a performance hit for this, but it does
      1	  14718    * look better.
      1	  14719    */
      1	  14720   texMode |= _GlideRoot.environment.texLodDither;
      1	  14721 
      1	  14722   /* Write relevant registers out to hardware */
      1	  14723   hw = SST_TMU(hw, tmu);
      2	  14724   REG_GROUP_BEGIN((0x02UL << tmu), textureMode, 3, 0x0B);
      3	  14725   {
      3	  14726     REG_GROUP_SET(hw, textureMode, texMode);
      3	  14727     REG_GROUP_SET(hw, tLOD,        tLod);
      3	  14728     REG_GROUP_SET(hw, texBaseAddr, baseAddress);
      2	  14729   }
      1	  14730   REG_GROUP_END();
      1	  14731 
      1	  14732   /* update shadows */
      1	  14733   gc->state.tmu_config[tmu].texBaseAddr = baseAddress;
      1	  14734   gc->state.tmu_config[tmu].textureMode = texMode;
      1	  14735   gc->state.tmu_config[tmu].tLOD = tLod;
      1	  14736  
      1	  14737   GR_END();
      1	  14738 #undef FN_NAME
      1	  14739 } /* guTexSource */
	  14740 
	  14741 


Command Line
------- ----

CC/DEBUG/NOOP/LIST=[.OUT.DEBUG.OBJ.GLIDE.GLIDE2X.CVG.GLIDE.SRC]GUTEX/OBJECT=[.O
UT.DEBUG.OBJ.GLIDE.GLIDE2X.CVG.GLIDE.SRC]GUTEX.OBJ/INCLUDE_DIRECTORY=([.GLIDE.S
WLIBS.FXMISC],[.GLIDE.GLIDE2X.CVG.INCSRC],[.GLIDE.GLIDE2X.CVG.GLIDE.SRC],[.GLID
E.GLIDE2X.CVG.INIT],[.GLIDE.SWLIBS.NEWPCI.PCILIB])/DEFINE=(CVG,GLIDE_USE_C_TRIS
ETUP,GLIDE_HW_TRI_SETUP=1,GLIDE_TRI_CULLING=1,GLIDE_DEFAULT_GAMMA=1.3F,GLIDE_LI
B=1) [.GLIDE.GLIDE2X.CVG.GLIDE.SRC]GUTEX.C

Hardware: /ARCHITECTURE=GENERIC /OPTIMIZE=TUNE=GENERIC

These macros are in effect at the start of the compilation.
----- ------ --- -- ------ -- --- ----- -- --- ------------

 __G_FLOAT=1  __DECC=1  vms=1  VMS=1  __32BITS=1  __PRAGMA_ENVIRONMENT=1 
 __CRTL_VER=80400000  __vms_version="V8.4-2L1"  CC$gfloat=1  __X_FLOAT=1 

GUTEX                           Source Listing                   9-MAY-2021 23:43:10  VSI C V7.4-002-50R2O              Page 5
V1.0                                                             2-FEB-2021 02:11:10  gutex.c;1

 GLIDE_HW_TRI_SETUP=1  GLIDE_USE_C_TRISETUP=1  vms_version="V8.4-2L1" 
 __DATE__="May  9 2021"  __STDC_VERSION__=199901L  __DECC_MODE_RELAXED=1 
 __DECC_VER=70490002  __VMS=1  GLIDE_DEFAULT_GAMMA=1.3F  GLIDE_LIB=1 
 __ALPHA=1  VMS_VERSION="V8.4-2L1"  __IEEE_FLOAT=0  __VMS_VERSION="V8.4-2L1" 
 __TIME__="23:43:10"  __Alpha_AXP=1  __VMS_VER=80421222 
 __BIASED_FLT_ROUNDS=2  CVG=1  __INITIAL_POINTER_SIZE=0  __STDC__=2 
 __LANGUAGE_C__=1  __vms=1  __alpha=1  __D_FLOAT=0  GLIDE_TRI_CULLING=1 

