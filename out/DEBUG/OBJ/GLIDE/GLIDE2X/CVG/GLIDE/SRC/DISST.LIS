DISST                           Source Listing                   9-MAY-2021 23:42:45  VSI C V7.4-002-50R2O              Page 1
V1.0                                                             2-FEB-2021 02:11:10  disst.c;1

	      1 /*
	      2 ** THIS SOFTWARE IS SUBJECT TO COPYRIGHT PROTECTION AND IS OFFERED ONLY
	      3 ** PURSUANT TO THE 3DFX GLIDE GENERAL PUBLIC LICENSE. THERE IS NO RIGHT
	      4 ** TO USE THE GLIDE TRADEMARK WITHOUT PRIOR WRITTEN PERMISSION OF 3DFX
	      5 ** INTERACTIVE, INC. A COPY OF THIS LICENSE MAY BE OBTAINED FROM THE 
	      6 ** DISTRIBUTOR OR BY CONTACTING 3DFX INTERACTIVE INC(info@3dfx.com). 
	      7 ** THIS PROGRAM IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER 
	      8 ** EXPRESSED OR IMPLIED. SEE THE 3DFX GLIDE GENERAL PUBLIC LICENSE FOR A
	      9 ** FULL TEXT OF THE NON-WARRANTY PROVISIONS.  
	     10 ** 
	     11 ** USE, DUPLICATION OR DISCLOSURE BY THE GOVERNMENT IS SUBJECT TO
	     12 ** RESTRICTIONS AS SET FORTH IN SUBDIVISION (C)(1)(II) OF THE RIGHTS IN
	     13 ** TECHNICAL DATA AND COMPUTER SOFTWARE CLAUSE AT DFARS 252.227-7013,
	     14 ** AND/OR IN SIMILAR OR SUCCESSOR CLAUSES IN THE FAR, DOD OR NASA FAR
	     15 ** SUPPLEMENT. UNPUBLISHED RIGHTS RESERVED UNDER THE COPYRIGHT LAWS OF
	     16 ** THE UNITED STATES.  
	     17 ** 
	     18 ** COPYRIGHT 3DFX INTERACTIVE, INC. 1999, ALL RIGHTS RESERVED
	     19 **
	     20 ** Revision 1.1.1.1.2.1  2004/12/23 20:45:56  koolsmoky
	     21 ** converted to nasm syntax
	     22 ** added x86 asm, 3dnow! triangle and mmx, 3dnow! texture download optimizations
	     23 **
	     24 ** Revision 1.1.1.1  1999/12/07 21:49:08  joseph
	     25 ** Initial checkin into SourceForge.
	     26 **
	     27 ** 
	     28 ** 22    4/21/98 10:05a Peter
	     29 ** grSstSelect cleanup (Thanks John/Rufus)
	     30 ** 
	     31 ** 21    3/17/98 6:50p Peter
	     32 ** sli paired vs active
	     33 ** 
	     34 ** 20    2/24/98 10:15a Peter
	     35 ** oem dll muckage
	     36 ** 
	     37 ** 19    2/20/98 11:00a Peter
	     38 ** removed glide3 from glid2 tree
	     39  * 
	     40  * 18    12/17/97 4:05p Atai
	     41  * added grChromaRange(), grGammaCorrecionRGB(), grRest(), and grGet()
	     42  * functions
	     43  * 
	     44  * 17    12/09/97 12:20p Peter
	     45  * mac glide port
	     46  * 
	     47  * 16    11/19/97 2:49p Peter
	     48  * env vars in registry for win32
	     49  * 
	     50  * 15    11/18/97 4:36p Peter
	     51  * chipfield stuff cleanup and w/ direct writes
	     52  * 
	     53  * 14    10/31/97 9:15a Peter
	     54  * only lie about v2 boards
	     55  * 
	     56  * 13    10/31/97 8:53a Peter
	     57  * last lying change, really

DISST                           Source Listing                   9-MAY-2021 23:42:45  VSI C V7.4-002-50R2O              Page 2
V1.0                                                             2-FEB-2021 02:11:10  disst.c;1

	     58  * 
	     59  * 12    9/05/97 5:29p Peter
	     60  * changes for direct hw
	     61  * 
	     62  * 11    6/20/97 9:56a Peter
	     63  * better lines/pts, hopefully
	     64  * 
	     65  * 10    6/02/97 4:09p Peter
	     66  * Compile w/ gcc for Dural
	     67  * 
	     68  * 9     5/27/97 1:16p Peter
	     69  * Basic cvg, w/o cmd fifo stuff. 
	     70  * 
	     71  * 8     5/21/97 6:04a Peter
	     72  * 
	     73  * 7     5/02/97 2:07p Pgj
	     74  * grSstScreenWidth/Height now FxU32
	     75  * 
	     76  * 6     3/17/97 6:25a Jdt
	     77  * Added initDeviceSelect to grSstSelect()
	     78  * 
	     79  * 5     3/09/97 10:31a Dow
	     80  * Added GR_DIENTRY for di glide functions
	     81  * 
	     82  * 4     3/04/97 9:08p Dow
	     83  * 
	     84  * 3     1/18/97 11:39p Dow
	     85  * Changed location of _curGCFuncs
	     86  * 
	     87  * 2     1/16/97 3:39p Dow
	     88  * Added ref to _curGCFuncs during grSstSelect()
	     89  * 
	     90  * 1     12/23/96 1:39p Dow
	     91  * Changes for multiplatform
	     92 **
	     93 */
	     94 
	     95 #include <stdio.h>
	   1706 #include <string.h>
	   2157 #include <3dfx.h>
	   2288 
	   2289 #include <glidesys.h>
	   2421 
	   2422 #define FX_DLL_DEFINITION
	   2423 #include <fxdll.h>
	   2544 #include <glide.h>
	   4355 #include "fxglide.h"
	  14637 
	  14638 
	  14639 /*---------------------------------------------------------------------------
	  14640 ** grSstQueryBoards
	  14641 **
	  14642 ** NOTE:  it is OK to call this routine before grGlideInit
	  14643 */
	  14644 GR_DIENTRY(grSstQueryBoards, FxBool, ( GrHwConfiguration *hwc ))
      1	  14645 {
      1	  14646   GDBG_INIT();

DISST                           Source Listing                   9-MAY-2021 23:42:45  VSI C V7.4-002-50R2O              Page 3
V1.0                                                             2-FEB-2021 02:11:10  disst.c;1

      1	  14647   GDBG_INFO(80,"grSstQueryBoards(0x%x)\n",hwc);
      1	  14648 
      1	  14649 #if 1 /*GLIDE_INIT_HAL*/
      1	  14650   hwc->num_sst = (_grSstDetectResources()
      1	  14651                   ? _GlideRoot.hwConfig.num_sst
      1	  14652                   : 0);
      1X  14653 #else /* !GLIDE_INIT_HAL */
      1X  14654   hwc->num_sst = sst1InitNumBoardsInSystem();
      1X  14655 #endif /* !GLIDE_INIT_HAL */
      1	  14656 
      1	  14657   return FXTRUE;
      1	  14658 } /* grSstQueryBoards */
	  14659 
	  14660 /*---------------------------------------------------------------------------
	  14661 ** grSstQueryHardware
	  14662 **
	  14663 */
	  14664 GR_DIENTRY(grSstQueryHardware, FxBool, ( GrHwConfiguration *hwc ))
      1	  14665 {
      1	  14666   FxBool retVal;
      1	  14667 
      1	  14668   GR_BEGIN_NOFIFOCHECK("grSstQueryHardware",80);
      1	  14669   GDBG_INFO_MORE(gc->myLevel,"(0x%x)\n",hwc);
      1	  14670 
      1	  14671   /* init and copy the data back to the user's structure */
      1	  14672   retVal = _GlideRoot.hwConfig.num_sst > 0;
      1	  14673   *hwc = _GlideRoot.hwConfig;
      1	  14674 
      1	  14675 #if (GLIDE_PLATFORM & GLIDE_HW_CVG)
      1	  14676   /* Lie that we are an sst1 for backwards compatability */
      2	  14677   {
      2	  14678     int i;
      2	  14679     const GrSstType reportType  = ((GETENV("FX_GLIDE_REPORT_REAL_HW") == NULL)
      2	  14680                                    ? GR_SSTTYPE_VOODOO
      2	  14681                                    : GR_SSTTYPE_Voodoo2);
      2	  14682 
      3	  14683     for(i = 0; i < _GlideRoot.hwConfig.num_sst; i++) {
      3	  14684       if (hwc->SSTs[i].type == GR_SSTTYPE_Voodoo2) hwc->SSTs[i].type = reportType;
      2	  14685     }
      1	  14686   }
      1	  14687 #endif
      1	  14688 
      1	  14689   GR_RETURN(retVal);
      1	  14690 } /* grSstQueryHardware */
	  14691 
	  14692 /*---------------------------------------------------------------------------
	  14693 ** grSstSelect
	  14694 */
	  14695 GR_DIENTRY(grSstSelect, void, ( int which ))
      1	  14696 {
      1	  14697   GR_BEGIN_NOFIFOCHECK("grSstSelect",80);
      1	  14698   GDBG_INFO_MORE(gc->myLevel,"(%d)\n",which);
      1	  14699 
      1	  14700   if ( which >= _GlideRoot.hwConfig.num_sst )
      1	  14701     GrErrorCallback( "grSstSelect:  non-existent SST", FXTRUE );
      1	  14702 
      1	  14703   _GlideRoot.current_sst = _GlideRoot.gcMap[which];

DISST                           Source Listing                   9-MAY-2021 23:42:45  VSI C V7.4-002-50R2O              Page 4
V1.0                                                             2-FEB-2021 02:11:10  disst.c;1

      1	  14704   _GlideRoot.curGC       = &_GlideRoot.GCs[_GlideRoot.current_sst];
      1	  14705 
      1X  14706 #ifdef GLIDE_MULTIPLATFORM
      1X  14707   _GlideRoot.curGCFuncs = _GlideRoot.curGC->gcFuncs;
      1X  14708 #endif
      1	  14709 
      1	  14710     GR_END();
      1	  14711 } /* grSstSelect */
	  14712 
	  14713 /*---------------------------------------------------------------------------
	  14714 ** grSstScreenWidth
	  14715 */
	  14716 GR_DIENTRY(grSstScreenWidth, FxU32, (void))
      1	  14717 {
      1	  14718   GR_DCL_GC;
      1	  14719   GR_ASSERT(gc != NULL);
      1	  14720   return gc->state.screen_width;
      1	  14721 } /* grSstScreenWidth */
	  14722 
	  14723 /*---------------------------------------------------------------------------
	  14724 ** grSstScreenHeight
	  14725 */
	  14726 GR_DIENTRY(grSstScreenHeight, FxU32,  (void))
      1	  14727 {
      1	  14728   GR_DCL_GC;
      1	  14729   GR_ASSERT(gc != NULL);
      1	  14730   return gc->state.screen_height;
      1	  14731 }
	  14732 
	  14733 /*---------------------------------------------------------------------------
	  14734 **  grSstVidMode - override args to grSstOpen()
	  14735 */
	  14736 GR_DIENTRY(grSstVidMode, void, (FxU32 whichSst, FxVideoTimingInfo* vidTimings))
      1	  14737 {
      1	  14738   GDBG_INFO(80,"grSstVidMode(%d,0x%x)\n",whichSst,vidTimings);
      1X  14739 #ifdef GLIDE_DEBUG
      1X  14740   if (whichSst >= MAX_NUM_SST) {
      1X  14741     char errStr[1028];
      1X  14742     sprintf(errStr, "grSstVidMode:  %ld greater than MAX_NUM_SST (%d)\n",
      1X  14743             whichSst, MAX_NUM_SST);
      1X  14744 
      1X  14745     GrErrorCallback(errStr, FXTRUE);
      1X  14746   }
      1X  14747 #endif
      1	  14748 
      1	  14749   _GlideRoot.GCs[whichSst].vidTimings = vidTimings;    
      1	  14750 } /* grSstVidMode */


Command Line
------- ----

CC/DEBUG/NOOP/LIST=[.OUT.DEBUG.OBJ.GLIDE.GLIDE2X.CVG.GLIDE.SRC]DISST/OBJECT=[.O
UT.DEBUG.OBJ.GLIDE.GLIDE2X.CVG.GLIDE.SRC]DISST.OBJ/INCLUDE_DIRECTORY=([.GLIDE.S
WLIBS.FXMISC],[.GLIDE.GLIDE2X.CVG.INCSRC],[.GLIDE.GLIDE2X.CVG.GLIDE.SRC],[.GLID
E.GLIDE2X.CVG.INIT],[.GLIDE.SWLIBS.NEWPCI.PCILIB])/DEFINE=(CVG,GLIDE_USE_C_TRIS
ETUP,GLIDE_HW_TRI_SETUP=1,GLIDE_TRI_CULLING=1,GLIDE_DEFAULT_GAMMA=1.3F,GLIDE_LI

DISST                           Source Listing                   9-MAY-2021 23:42:45  VSI C V7.4-002-50R2O              Page 5
V1.0                                                             2-FEB-2021 02:11:10  disst.c;1

B=1) [.GLIDE.GLIDE2X.CVG.GLIDE.SRC]DISST.C

Hardware: /ARCHITECTURE=GENERIC /OPTIMIZE=TUNE=GENERIC

These macros are in effect at the start of the compilation.
----- ------ --- -- ------ -- --- ----- -- --- ------------

 __G_FLOAT=1  __DECC=1  vms=1  VMS=1  __32BITS=1  __PRAGMA_ENVIRONMENT=1 
 __CRTL_VER=80400000  __vms_version="V8.4-2L1"  CC$gfloat=1  __X_FLOAT=1 
 GLIDE_HW_TRI_SETUP=1  GLIDE_USE_C_TRISETUP=1  vms_version="V8.4-2L1" 
 __DATE__="May  9 2021"  __STDC_VERSION__=199901L  __DECC_MODE_RELAXED=1 
 __DECC_VER=70490002  __VMS=1  GLIDE_DEFAULT_GAMMA=1.3F  GLIDE_LIB=1 
 __ALPHA=1  VMS_VERSION="V8.4-2L1"  __IEEE_FLOAT=0  __VMS_VERSION="V8.4-2L1" 
 __TIME__="23:42:45"  __Alpha_AXP=1  __VMS_VER=80421222 
 __BIASED_FLT_ROUNDS=2  CVG=1  __INITIAL_POINTER_SIZE=0  __STDC__=2 
 __LANGUAGE_C__=1  __vms=1  __alpha=1  __D_FLOAT=0  GLIDE_TRI_CULLING=1 

