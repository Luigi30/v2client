DIGLIDE                         Source Listing                   9-MAY-2021 23:42:43  VSI C V7.4-002-50R2O              Page 1
V1.0                                                             2-FEB-2021 02:11:10  diglide.c;1

	      1 /*
	      2 ** THIS SOFTWARE IS SUBJECT TO COPYRIGHT PROTECTION AND IS OFFERED ONLY
	      3 ** PURSUANT TO THE 3DFX GLIDE GENERAL PUBLIC LICENSE. THERE IS NO RIGHT
	      4 ** TO USE THE GLIDE TRADEMARK WITHOUT PRIOR WRITTEN PERMISSION OF 3DFX
	      5 ** INTERACTIVE, INC. A COPY OF THIS LICENSE MAY BE OBTAINED FROM THE 
	      6 ** DISTRIBUTOR OR BY CONTACTING 3DFX INTERACTIVE INC(info@3dfx.com). 
	      7 ** THIS PROGRAM IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER 
	      8 ** EXPRESSED OR IMPLIED. SEE THE 3DFX GLIDE GENERAL PUBLIC LICENSE FOR A
	      9 ** FULL TEXT OF THE NON-WARRANTY PROVISIONS.  
	     10 ** 
	     11 ** USE, DUPLICATION OR DISCLOSURE BY THE GOVERNMENT IS SUBJECT TO
	     12 ** RESTRICTIONS AS SET FORTH IN SUBDIVISION (C)(1)(II) OF THE RIGHTS IN
	     13 ** TECHNICAL DATA AND COMPUTER SOFTWARE CLAUSE AT DFARS 252.227-7013,
	     14 ** AND/OR IN SIMILAR OR SUCCESSOR CLAUSES IN THE FAR, DOD OR NASA FAR
	     15 ** SUPPLEMENT. UNPUBLISHED RIGHTS RESERVED UNDER THE COPYRIGHT LAWS OF
	     16 ** THE UNITED STATES.  
	     17 ** 
	     18 ** COPYRIGHT 3DFX INTERACTIVE, INC. 1999, ALL RIGHTS RESERVED
	     19 **
	     20 ** Revision 1.1.1.1.2.4  2006/09/02 03:13:53  guillemj
	     21 ** Remove redundant definition of single_precision_asm and double_precision_asm,
	     22 ** to fix the code not building from source.
	     23 **
	     24 ** Revision 1.1.1.1.2.3  2005/01/22 14:52:01  koolsmoky
	     25 ** enabled packed argb for cmd packet type 3
	     26 **
	     27 ** Revision 1.1.1.1.2.2  2004/12/23 20:45:56  koolsmoky
	     28 ** converted to nasm syntax
	     29 ** added x86 asm, 3dnow! triangle and mmx, 3dnow! texture download optimizations
	     30 **
	     31 ** Revision 1.1.1.1.2.1  2004/12/12 15:18:58  koolsmoky
	     32 ** changes to support new cpuid; moved single_precision_asm(), double_precision_asm() from cpudetect.asm
	     33 **
	     34 ** Revision 1.1.1.1  1999/12/07 21:49:08  joseph
	     35 ** Initial checkin into SourceForge.
	     36 **
	     37 ** 
	     38 ** 40    6/23/98 5:38p Peter
	     39 ** lfb hinting
	     40 ** 
	     41 ** 39    3/17/98 3:00p Peter
	     42 ** removed unused stats
	     43 ** 
	     44 ** 38    3/02/98 7:22p Peter
	     45 ** moved internal function to where it is used
	     46 ** 
	     47 ** 37    2/20/98 11:00a Peter
	     48 ** removed glide3 from glid2 tree
	     49 ** 
	     50 ** 36    2/20/98 9:05a Peter
	     51 ** removed remnants of comdex grot
	     52 ** 
	     53 ** 35    1/30/98 4:31p Peter
	     54 ** general clenaup
	     55 ** 
	     56 ** 34    1/20/98 10:48a Atai
	     57 ** validate state in grGlideGetState

DIGLIDE                         Source Listing                   9-MAY-2021 23:42:43  VSI C V7.4-002-50R2O              Page 2
V1.0                                                             2-FEB-2021 02:11:10  diglide.c;1

	     58  * 
	     59  * 33    1/07/98 10:22a Peter
	     60  * lod dithering env var
	     61  * 
	     62  * 32    1/06/98 3:53p Atai
	     63  * remove grHint, modify grLfbWriteRegion and grGet
	     64  * 
	     65  * 31    12/17/97 4:05p Atai
	     66  * added grChromaRange(), grGammaCorrecionRGB(), grRest(), and grGet()
	     67  * functions
	     68  * 
	     69  * 30    12/09/97 12:20p Peter
	     70  * mac glide port
	     71  * 
	     72  * 29    12/01/97 5:46p Peter
	     73  * fixed variable names in swizzle
	     74  * 
	     75  * 28    12/01/97 5:17p Peter
	     76  * 
	     77  * 27    11/18/97 4:36p Peter
	     78  * chipfield stuff cleanup and w/ direct writes
	     79  * 
	     80  * 26    11/14/97 5:02p Peter
	     81  * more comdex stuff
	     82  * 
	     83  * 25    11/14/97 12:09a Peter
	     84  * comdex thing and some other stuff
	     85  * 
	     86  * 24    11/12/97 2:27p Peter
	     87  * 
	     88  * 23    11/12/97 11:39a Dow
	     89  * H3 Stuff
	     90  * 
	     91  * 22    11/12/97 9:21a Dow
	     92  * Changed CVG_FIFO to USE_PACKET_FIFO
	     93  * 
	     94  * 21    11/04/97 4:00p Dow
	     95  * Banshee Mods
	     96  * 
	     97  * 20    11/03/97 3:43p Peter
	     98  * h3/cvg cataclysm
	     99  * 
	    100  * 19    10/16/97 3:40p Peter
	    101  * packed rgb
	    102  * 
	    103  * 18    9/20/97 10:53a Peter
	    104  * keep track of palette stats
	    105  * 
	    106  * 17    9/15/97 7:31p Peter
	    107  * more cmdfifo cleanup, fixed normal buffer clear, banner in the right
	    108  * place, lfb's are on, Hmmmm.. probably more
	    109  * 
	    110  * 16    9/10/97 10:13p Peter
	    111  * fifo logic from GaryT, non-normalized fp first cut
	    112  * 
	    113  * 15    7/25/97 11:40a Peter
	    114  * removed dHalf, change field name to match real use for cvg

DIGLIDE                         Source Listing                   9-MAY-2021 23:42:43  VSI C V7.4-002-50R2O              Page 3
V1.0                                                             2-FEB-2021 02:11:10  diglide.c;1

	    115  * 
	    116  * 14    7/08/97 2:48p Peter
	    117  * 
	    118  * 13    6/30/97 3:20p Peter
	    119  * error callback
	    120  * 
	    121  * 12    6/23/97 4:43p Peter
	    122  * cleaned up #defines etc for a nicer tree
	    123  * 
	    124 **
	    125 */
	    126 
	    127 #include <string.h>
	   1126 #include <3dfx.h>
	   1257 #include <glidesys.h>
	   1389 
	   1390 #define FX_DLL_DEFINITION
	   1391 #include <fxdll.h>
	   1512 #include <glide.h>
	   3323 #include "fxglide.h"
	  14667 
	  14668 #include "rcver.h"
	  14702 static char glideIdent[] = "@#%" VERSIONSTR ;
	  14703 
	  14704 /* the root of all EVIL */
	  14705 struct _GlideRoot_s GR_CDECL _GlideRoot;
	  14706 /* This is global to speed up the function call wrappers */
	  14707 
	  14708 /*---------------------------------------------------------------------------
	  14709 **
	  14710 */
	  14711 void
	  14712 _grDisplayStats(void)
      1	  14713 {
      1	  14714     int frames = _GlideRoot.stats.bufferSwaps;
      1	  14715 
      1	  14716     if (frames <= 0) frames = 1;
      1	  14717     gdbg_info(80,"GLIDE STATISTICS:\n");
      1	  14718     gdbg_info(80,"     triangles processed: %7d       tris drawn: %7d\n",
      1	  14719               _GlideRoot.stats.trisProcessed, _GlideRoot.stats.trisDrawn);
      1	  14720     gdbg_info(80,"            buffer swaps: %7d       tris/frame: %7d , %d\n",
      1	  14721                    _GlideRoot.stats.bufferSwaps,
      1	  14722                    _GlideRoot.stats.trisProcessed/frames,
      1	  14723                    _GlideRoot.stats.trisDrawn/frames);
      1	  14724     gdbg_info(80,"                  points: %7d       pnts/frame: %7d\n",
      1	  14725               _GlideRoot.stats.pointsDrawn, _GlideRoot.stats.pointsDrawn/frames);
      1	  14726     gdbg_info(80,"                   lines: %7d      lines/frame: %7d\n",
      1	  14727               _GlideRoot.stats.linesDrawn, _GlideRoot.stats.linesDrawn/frames);
      1	  14728     gdbg_info(80,"       texture downloads: %7d    texture bytes: %7d\n",
      1	  14729                    _GlideRoot.stats.texDownloads,  _GlideRoot.stats.texBytes);
      1	  14730     gdbg_info(80,"       palette downloads: %7d    palette bytes: %7d\n",
      1	  14731                    _GlideRoot.stats.palDownloads, _GlideRoot.stats.palBytes);
      1	  14732     gdbg_info(80,"           NCC downloads: %7d        NCC bytes: %7d\n",
      1	  14733               _GlideRoot.stats.nccDownloads, _GlideRoot.stats.nccBytes);
      1	  14734 
      1X  14735 #if USE_PACKET_FIFO
      1X  14736     gdbg_info(80,"\tCommandFifo:\n");

DIGLIDE                         Source Listing                   9-MAY-2021 23:42:43  VSI C V7.4-002-50R2O              Page 4
V1.0                                                             2-FEB-2021 02:11:10  diglide.c;1

      1X  14737     gdbg_info(80,"\t\tWraps: %ld\n", _GlideRoot.stats.fifoWraps);
      1X  14738     if (_GlideRoot.stats.fifoWraps > 0) {
      1X  14739       gdbg_info(80,"\t\tAvg Drain Depth: %g\n", 
      1X  14740                 (double)_GlideRoot.stats.fifoWrapDepth / _GlideRoot.stats.fifoWraps);
      1X  14741     }
      1X  14742     gdbg_info(80,"\t\tStalls: %ld\n", _GlideRoot.stats.fifoStalls);
      1X  14743     if (_GlideRoot.stats.fifoStalls > 0) {
      1X  14744       gdbg_info(80,"\t\tAvg Stall Depth: %g\n", 
      1X  14745                 (double)_GlideRoot.stats.fifoStallDepth / _GlideRoot.stats.fifoStalls);
      1X  14746     }
      1X  14747 #endif /* CVG_FIFO */
      1	  14748 }
	  14749 
	  14750 #if !USE_PACKET_FIFO
	  14751 /*
	  14752 ** fifoFree is kept in bytes, each fifo entry is 8 bytes, but since there
	  14753 ** are headers involved, we assume an average of 2 registers per 8 bytes
	  14754 ** or 4 bytes of registers stored in every fifo entry
	  14755 */
	  14756 void
	  14757 _grReCacheFifo(FxI32 n)
      1	  14758 {
      1	  14759 #if !(GLIDE_PLATFORM & GLIDE_HW_H3)
      1	  14760   GR_DCL_GC;
      1	  14761   gc->state.fifoFree = ((grSstStatus() >> SST_MEMFIFOLEVEL_SHIFT) & 0xffff)<<2;
      1	  14762 
      1X  14763 #if 0
      1X  14764   gc->state.fifoFree -= gc->hwDep.sst1Dep.swFifoLWM + n;
      1X  14765 #endif
      1	  14766 #endif
      1	  14767 }
	  14768 
	  14769 FxI32 GR_CDECL
	  14770 _grSpinFifo(FxI32 n)
      1	  14771 {
      1	  14772   GR_DCL_GC;
      2	  14773   do {
      2	  14774     _grReCacheFifo(n);
      1	  14775   } while (gc->state.fifoFree < 0);
      1	  14776 
      1	  14777   return gc->state.fifoFree;
      1	  14778 }
	  14779 #endif /* !USE_PACKET_FIFO */
	  14780 
	  14781 /*---------------------------------------------------------------------------
	  14782 **
	  14783 */
	  14784 void 
	  14785 _grSwizzleColor(GrColor_t *color)
      1	  14786 {
      1	  14787   GR_DCL_GC;
      1	  14788   FxU32 red, green, blue, alpha;
      1	  14789   
      2	  14790   switch(gc->state.color_format) {
      2	  14791   case GR_COLORFORMAT_ARGB:
      2	  14792     break;
      2	  14793 

DIGLIDE                         Source Listing                   9-MAY-2021 23:42:43  VSI C V7.4-002-50R2O              Page 5
V1.0                                                             2-FEB-2021 02:11:10  diglide.c;1

      2	  14794   case GR_COLORFORMAT_ABGR:
      2	  14795     red     = (*color & 0x000000ff) << 16; /* 00RR0000 */
      2	  14796     blue    = (*color & 0x00ff0000) >> 16; /* 000000BB */
      2	  14797     *color &= 0xff00ff00;                  /* AA00GG00 */
      2	  14798     *color |= (red | blue);                /* AARRGGBB */
      2	  14799     break;
      2	  14800 
      2	  14801   case GR_COLORFORMAT_RGBA:
      2	  14802     blue   = (*color & 0x0000ff00) >> 8;  /* 000000BB */
      2	  14803     green  = (*color & 0x00ff0000) >> 8;  /* 0000GG00 */
      2	  14804     red    = (*color & 0xff000000) >> 8;  /* 00RR0000 */
      2	  14805     alpha  = (*color & 0x000000ff) << 24; /* AA000000 */
      2	  14806     *color = alpha | red | green | blue;  /* AARRGGBB */
      2	  14807     break;
      2	  14808 
      2	  14809   case GR_COLORFORMAT_BGRA:
      2	  14810     blue   = (*color & 0xff000000) >> 24; /* 000000BB */
      2	  14811     green  = (*color & 0x00ff0000) >> 8;  /* 0000GG00 */
      2	  14812     red    = (*color & 0x0000ff00) << 8;  /* 00RR0000 */
      2	  14813     alpha  = (*color & 0x000000ff) << 24; /* AA000000 */
      2	  14814     *color = alpha | red | green | blue;  /* AARRGGBB */
      2	  14815     break;
      2	  14816 
      2	  14817   default:
      2	  14818     GR_ASSERT(0);
      2	  14819     break;
      1	  14820   }
      1	  14821 } /* _grSwizzleColor */
	  14822 
	  14823 /*---------------------------------------------------------------------------
	  14824 ** grGlideGetVersion
	  14825 ** NOTE: allow this to be called before grGlideInit()
	  14826 */
	  14827 GR_DIENTRY(grGlideGetVersion, void, (char version[80]))
      1	  14828 {
      1	  14829   GDBG_INFO(87,"grGlideGetVersion(0x%x) => \"%s\"\n",version,glideIdent+3);
      1	  14830   GR_ASSERT(version != NULL);
      1	  14831   strcpy(version,glideIdent+3);
      1	  14832 } /* grGlideGetVersion */
	  14833 
	  14834 /*---------------------------------------------------------------------------
	  14835 ** grGlideGetState
	  14836 */
	  14837 GR_DIENTRY(grGlideGetState, void, (GrState *state))
      1	  14838 {
      1	  14839   GR_BEGIN_NOFIFOCHECK("grGlideGetState",87);
      1	  14840   GDBG_INFO_MORE(gc->myLevel,"(0x%x)\n",state);
      1	  14841   GR_ASSERT(state != NULL);
      1	  14842 
      1	  14843   *state = gc->state;
      1	  14844   GR_END();
      1	  14845 } /* grGlideGetState */
	  14846 
	  14847 #ifndef GLIDE_ALPHA
	  14848 /*---------------------------------------------------------------------------
	  14849 ** grHints
	  14850 */

DIGLIDE                         Source Listing                   9-MAY-2021 23:42:43  VSI C V7.4-002-50R2O              Page 6
V1.0                                                             2-FEB-2021 02:11:10  diglide.c;1

	  14851 GR_DIENTRY(grHints, void, (GrHint_t hintType, FxU32 hints))
      1	  14852 {
      1	  14853   GR_BEGIN_NOFIFOCHECK("grHints",85);
      1	  14854   GDBG_INFO_MORE(gc->myLevel,"(%d,0x%x)\n",hintType,hints);
      1	  14855 
      2	  14856   switch (hintType) {
      2	  14857   case GR_HINT_STWHINT:
      3	  14858     if (gc->state.paramHints != hints) {
      3	  14859       gc->state.paramHints = hints;
      3	  14860       _grUpdateParamIndex();
      2	  14861     }
      2	  14862     break;
      2	  14863 
      2	  14864   case GR_HINT_FIFOCHECKHINT:
      2	  14865     /* swFifoLWM is kept internally in bytes, hints are in fifo entries */ 
      2	  14866     gc->state.checkFifo = hints;
      2	  14867     break;
      2	  14868 
      2	  14869   case GR_HINT_FPUPRECISION:
      2	  14870     hints ? double_precision_asm() : single_precision_asm();
      2	  14871     break;
      2	  14872 
      2	  14873   case GR_HINT_ALLOW_MIPMAP_DITHER:
      2	  14874     /* Regardless of the game hint, force the user selection */
      2	  14875     gc->state.allowLODdither = ((_GlideRoot.environment.texLodDither != 0) || 
      2	  14876                                 hints);
      2	  14877     break;
      2	  14878 
      2	  14879   case GR_HINT_LFB_WRITE:
      3	  14880   {
      3	  14881     const FxU32 lfbRange = (((hints * gc->state.screen_height) + 0x1000UL) & 
      3	  14882                             ~(0x1000UL - 1));
      3	  14883     
      3	  14884     pciLinearRangeSetPermission((const FxU32)((const FxU8*)gc->base_ptr + 0x200000UL),
      3	  14885                                 0x200000UL,
      3	  14886                                 FXFALSE);
      3	  14887     pciLinearRangeSetPermission((const FxU32)gc->lfb_ptr,
      3	  14888                                 lfbRange,
      3	  14889                                 FXTRUE);
      3	  14890     pciLinearRangeSetPermission((const FxU32)((const FxU8*)gc->lfb_ptr + lfbRange),
      3	  14891                                 0x400000UL - lfbRange,
      3	  14892                                 FXFALSE);
      3	  14893     break;
      2	  14894   }
      2	  14895 
      2	  14896   case GR_HINT_LFB_PROTECT:
      2	  14897     pciLinearRangeSetPermission((const FxU32)((const FxU8*)gc->base_ptr + 0x200000UL),
      2	  14898                                 0x200000UL,
      2	  14899                                 FXTRUE);
      2	  14900     pciLinearRangeSetPermission((const FxU32)gc->lfb_ptr,
      2	  14901                                 0x400000,
      2	  14902                                 FXFALSE);
      2	  14903     break;
      2	  14904 
      2	  14905   case GR_HINT_LFB_RESET:
      2	  14906     pciLinearRangeSetPermission((const FxU32)gc->base_ptr,
      2	  14907                                 0x1000000UL,

DIGLIDE                         Source Listing                   9-MAY-2021 23:42:43  VSI C V7.4-002-50R2O              Page 7
V1.0                                                             2-FEB-2021 02:11:10  diglide.c;1

      2	  14908                                 FXTRUE);
      2	  14909     break;
      2	  14910   
      2	  14911   default:
      2	  14912     GR_CHECK_F(myName, 1, "invalid hints type");
      1	  14913   }
      1	  14914   GR_END();
      1	  14915 } /* grHints */
	  14916 #endif
	  14917 
	  14918 /*---------------------------------------------------------------------------
	  14919 ** grGlideInit
	  14920 */
	  14921 GR_DIENTRY(grGlideInit, void, (void))
      1	  14922 {
      1	  14923   GDBG_INIT();
      1	  14924   
      1	  14925   GDBG_INFO(80,"grGlideInit()\n");
      1	  14926   _GlideInitEnvironment();                      /* the main init code */
      1	  14927   FXUNUSED(*glideIdent);
      1	  14928 
      1X  14929 #if GDBG_INFO_ON
      1X  14930   gdbg_error_set_callback(_grErrorCallback);
      1X  14931 #endif
      1	  14932 
      1	  14933   grResetTriStats();
      1	  14934 
      1	  14935   GDBG_INFO(281,"grGlideInit --done---------------------------------------\n");
      1	  14936 } /* grGlideInit */
	  14937 
	  14938 
	  14939 /*---------------------------------------------------------------------------
	  14940 **  grGlideShamelessPlug - grGlideShamelessPlug
	  14941 **
	  14942 **  Returns:
	  14943 **
	  14944 **  Notes:
	  14945 **
	  14946 */
	  14947 GR_DIENTRY(grGlideShamelessPlug, void, (const FxBool mode))
      1	  14948 {
      1	  14949   GDBG_INFO(80,"grGlideShamelessPlug(%d)\n",mode);
      1	  14950   _GlideRoot.environment.shamelessPlug = mode;
      1	  14951 } /* grGlideShamelessPlug */
	  14952 
	  14953 /*---------------------------------------------------------------------------
	  14954 **  grResetTriStats - Set triangle counters to zero.
	  14955 */
	  14956 GR_DIENTRY(grResetTriStats, void, (void))
      1	  14957 {
      1	  14958   GDBG_INFO(80,"grResetTriStats()\n");
      1	  14959   _GlideRoot.stats.bufferSwaps = 0;
      1	  14960   _GlideRoot.stats.linesDrawn = 0;
      1	  14961   _GlideRoot.stats.trisProcessed = 0;
      1	  14962   _GlideRoot.stats.trisDrawn = 0;
      1	  14963   _GlideRoot.stats.texDownloads = 0;
      1	  14964   _GlideRoot.stats.texBytes = 0;

DIGLIDE                         Source Listing                   9-MAY-2021 23:42:43  VSI C V7.4-002-50R2O              Page 8
V1.0                                                             2-FEB-2021 02:11:10  diglide.c;1

      1	  14965   _GlideRoot.stats.palDownloads = 0;
      1	  14966   _GlideRoot.stats.palBytes = 0;
      1	  14967 } /* grResetTriStats */
	  14968 
	  14969 
	  14970 /*---------------------------------------------------------------------------
	  14971 **  grResetTriStats - Set triangle counters to zero.
	  14972 */
	  14973 GR_DIENTRY(grTriStats, void, (FxU32 *trisProcessed, FxU32 *trisDrawn))
      1	  14974 {
      1	  14975   GDBG_INFO(80,"grTriStats() => %d %d\n",
      1	  14976                 _GlideRoot.stats.trisProcessed,
      1	  14977                 _GlideRoot.stats.trisDrawn);
      1	  14978   *trisProcessed = _GlideRoot.stats.trisProcessed;
      1	  14979   *trisDrawn = _GlideRoot.stats.trisDrawn;
      1	  14980 } /* grTriStats */
	  14981 
	  14982 void GR_CDECL
	  14983 _grFence(void)
      1	  14984 {
      1	  14985   GDBG_INFO(120,"\t\t\t\t\t\t\tFENCE\n");
      1	  14986   P6FENCE;
      1	  14987 }


Command Line
------- ----

CC/DEBUG/NOOP/LIST=[.OUT.DEBUG.OBJ.GLIDE.GLIDE2X.CVG.GLIDE.SRC]DIGLIDE/OBJECT=[
.OUT.DEBUG.OBJ.GLIDE.GLIDE2X.CVG.GLIDE.SRC]DIGLIDE.OBJ/INCLUDE_DIRECTORY=([.GLI
DE.SWLIBS.FXMISC],[.GLIDE.GLIDE2X.CVG.INCSRC],[.GLIDE.GLIDE2X.CVG.GLIDE.SRC],[.
GLIDE.GLIDE2X.CVG.INIT],[.GLIDE.SWLIBS.NEWPCI.PCILIB])/DEFINE=(CVG,GLIDE_USE_C_
TRISETUP,GLIDE_HW_TRI_SETUP=1,GLIDE_TRI_CULLING=1,GLIDE_DEFAULT_GAMMA=1.3F,GLID
E_LIB=1) [.GLIDE.GLIDE2X.CVG.GLIDE.SRC]DIGLIDE.C

Hardware: /ARCHITECTURE=GENERIC /OPTIMIZE=TUNE=GENERIC

These macros are in effect at the start of the compilation.
----- ------ --- -- ------ -- --- ----- -- --- ------------

 __G_FLOAT=1  __DECC=1  vms=1  VMS=1  __32BITS=1  __PRAGMA_ENVIRONMENT=1 
 __CRTL_VER=80400000  __vms_version="V8.4-2L1"  CC$gfloat=1  __X_FLOAT=1 
 GLIDE_HW_TRI_SETUP=1  GLIDE_USE_C_TRISETUP=1  vms_version="V8.4-2L1" 
 __DATE__="May  9 2021"  __STDC_VERSION__=199901L  __DECC_MODE_RELAXED=1 
 __DECC_VER=70490002  __VMS=1  GLIDE_DEFAULT_GAMMA=1.3F  GLIDE_LIB=1 
 __ALPHA=1  VMS_VERSION="V8.4-2L1"  __IEEE_FLOAT=0  __VMS_VERSION="V8.4-2L1" 
 __TIME__="23:42:43"  __Alpha_AXP=1  __VMS_VER=80421222 
 __BIASED_FLT_ROUNDS=2  CVG=1  __INITIAL_POINTER_SIZE=0  __STDC__=2 
 __LANGUAGE_C__=1  __vms=1  __alpha=1  __D_FLOAT=0  GLIDE_TRI_CULLING=1 

