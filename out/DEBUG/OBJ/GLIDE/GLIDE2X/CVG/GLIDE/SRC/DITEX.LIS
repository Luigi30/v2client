DITEX                           Source Listing                   9-MAY-2021 23:42:47  VSI C V7.4-002-50R2O              Page 1
V1.0                                                             9-MAY-2021 05:20:33  ditex.c;3

	      1 /*
	      2 ** THIS SOFTWARE IS SUBJECT TO COPYRIGHT PROTECTION AND IS OFFERED ONLY
	      3 ** PURSUANT TO THE 3DFX GLIDE GENERAL PUBLIC LICENSE. THERE IS NO RIGHT
	      4 ** TO USE THE GLIDE TRADEMARK WITHOUT PRIOR WRITTEN PERMISSION OF 3DFX
	      5 ** INTERACTIVE, INC. A COPY OF THIS LICENSE MAY BE OBTAINED FROM THE 
	      6 ** DISTRIBUTOR OR BY CONTACTING 3DFX INTERACTIVE INC(info@3dfx.com). 
	      7 ** THIS PROGRAM IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER 
	      8 ** EXPRESSED OR IMPLIED. SEE THE 3DFX GLIDE GENERAL PUBLIC LICENSE FOR A
	      9 ** FULL TEXT OF THE NON-WARRANTY PROVISIONS.  
	     10 ** 
	     11 ** USE, DUPLICATION OR DISCLOSURE BY THE GOVERNMENT IS SUBJECT TO
	     12 ** RESTRICTIONS AS SET FORTH IN SUBDIVISION (C)(1)(II) OF THE RIGHTS IN
	     13 ** TECHNICAL DATA AND COMPUTER SOFTWARE CLAUSE AT DFARS 252.227-7013,
	     14 ** AND/OR IN SIMILAR OR SUCCESSOR CLAUSES IN THE FAR, DOD OR NASA FAR
	     15 ** SUPPLEMENT. UNPUBLISHED RIGHTS RESERVED UNDER THE COPYRIGHT LAWS OF
	     16 ** THE UNITED STATES.  
	     17 ** 
	     18 ** COPYRIGHT 3DFX INTERACTIVE, INC. 1999, ALL RIGHTS RESERVED
	     19 ** 
	     20 ** 20    6/06/98 12:06p Peter
	     21 ** gmt's trilinear hell bug
	     22 ** 
	     23 ** 19    2/20/98 5:31p Peter
	     24 ** crybaby glide
	     25 ** 
	     26 ** 18    2/20/98 11:00a Peter
	     27 ** removed glide3 from glid2 tree
	     28 ** 
	     29 ** 17    1/30/98 4:31p Peter
	     30 ** general clenaup
	     31  * 
	     32  * 16    1/13/98 12:42p Atai
	     33  * fixed grtexinfo, grVertexLayout, and draw triangle
	     34  * 
	     35  * 15    1/09/98 6:48p Atai
	     36  * grTexInfo, GR_LOD_* and GR_ASPECT_*
	     37  * 
	     38  * 13    12/09/97 12:20p Peter
	     39  * mac glide port
	     40  * 
	     41  * 12    12/02/97 9:49a Dow
	     42  * Got rid of Texelfx rev 0 warning
	     43  * 
	     44  * 11    11/20/97 6:58p Dow
	     45  * Marked _grTexTextureMemRequired for movement
	     46  * 
	     47  * 10    8/18/97 3:52p Peter
	     48  * pre-hw arrival fixes/cleanup
	     49  * 
	     50  * 9     6/02/97 4:09p Peter
	     51  * Compile w/ gcc for Dural
	     52  * 
	     53  * 8     5/27/97 1:16p Peter
	     54  * Basic cvg, w/o cmd fifo stuff. 
	     55  * 
	     56  * 7     5/21/97 6:04a Peter
	     57  * 

DITEX                           Source Listing                   9-MAY-2021 23:42:47  VSI C V7.4-002-50R2O              Page 2
V1.0                                                             9-MAY-2021 05:20:33  ditex.c;3

	     58  * 6     3/15/97 8:09p Jdt
	     59  * Remove grTexDownloadTable from this file because I added SST-1 only
	     60  * code to it
	     61  * 
	     62  * 5     3/09/97 10:31a Dow
	     63  * Added GR_DIENTRY for di glide functions
	     64  * 
	     65  * 4     2/12/97 2:09p Hanson
	     66  * Hopefully removed the rest of my muckage. 
	     67  * 
	     68  * 3     2/12/97 12:34p Dow
	     69  * Fixed Hanson muckage
	     70  * 
	     71  * 2     1/18/97 11:41p Dow
	     72  * Fixed Gary's "Last C Bug" analog
	     73  * Fixed usage of _grMipMapOffset_Tsplit
	     74  * 
	     75  * 1     12/23/96 1:39p Dow
	     76  * Changes for multiplatform
	     77 **
	     78 */
	     79 
	     80 #include <3dfx.h>
	    211 
	    212 #define FX_DLL_DEFINITION
	    213 #include <fxdll.h>
	    334 #include <glide.h>
	   2276 #include "fxglide.h"
	  14168 
	  14169 const FxU32 _gr_aspect_index_table[] =
	  14170 {
	  14171    3,
	  14172    2,
	  14173    1,
	  14174    0,
	  14175    1,
	  14176    2,
	  14177    3,
	  14178 };
	  14179 
	  14180 /* size in texels  */
	  14181 const FxU32 _grMipMapHostSize[4][16] = 
	  14182 {
	  14183   {                             /* 1:1 aspect ratio */
	  14184     65536,                      /* 0 : 256x256  */
	  14185     16384,                      /* 1 : 128x128  */
	  14186     4096,                       /* 2 :  64x64   */
	  14187     1024,                       /* 3 :  32x32   */
	  14188     256,                        /* 4 :  16x16   */
	  14189     64,                         /* 5 :   8x8    */
	  14190     16,                         /* 6 :   4x4    */
	  14191     4,                          /* 7 :   2x2    */
	  14192     1,                          /* 8 :   1x1    */
	  14193   },
	  14194   {                             /* 2:1 aspect ratio */
	  14195     32768,                      /* 0 : 256x128  */
	  14196     8192,                       /* 1 : 128x64   */

DITEX                           Source Listing                   9-MAY-2021 23:42:47  VSI C V7.4-002-50R2O              Page 3
V1.0                                                             9-MAY-2021 05:20:33  ditex.c;3

	  14197     2048,                       /* 2 :  64x32   */
	  14198     512,                        /* 3 :  32x16   */
	  14199     128,                        /* 4 :  16x8    */
	  14200     32,                         /* 5 :   8x4    */
	  14201     8,                          /* 6 :   4x2    */
	  14202     2,                          /* 7 :   2x1    */
	  14203     1,                          /* 8 :   1x1    */
	  14204   },
	  14205   {                             /* 4:1 aspect ratio */
	  14206     16384,                      /* 0 : 256x64   */
	  14207     4096,                       /* 1 : 128x32   */
	  14208     1024,                       /* 2 :  64x16   */
	  14209     256,                        /* 3 :  32x8    */
	  14210     64,                         /* 4 :  16x4    */
	  14211     16,                         /* 5 :   8x2    */
	  14212     4,                          /* 6 :   4x1    */
	  14213     2,                          /* 7 :   2x1    */
	  14214     1,                          /* 8 :   1x1    */
	  14215   },
	  14216   {                             /* 8:1 aspect ratio */
	  14217     8192,                       /* 0 : 256x32   */
	  14218     2048,                       /* 1 : 128x16   */
	  14219     512,                        /* 2 :  64x8    */
	  14220     128,                        /* 3 :  32x4    */
	  14221     32,                         /* 4 :  16x2    */
	  14222     8,                          /* 5 :   8x1    */
	  14223     4,                          /* 6 :   4x1    */
	  14224     2,                          /* 7 :   2x1    */
	  14225     1,                          /* 8 :   1x1    */
	  14226   }
	  14227 };
	  14228 
	  14229 const int _grMipMapHostWH[GR_ASPECT_1x8 + 1][GR_LOD_1 + 1][2] =
	  14230 {
	  14231    { 
	  14232      { 256 , 32 }, 
	  14233      { 128 , 16 }, 
	  14234      { 64  , 8 }, 
	  14235      { 32  , 4 }, 
	  14236      { 16  , 2 }, 
	  14237      { 8   , 1 }, 
	  14238      { 4   , 1 }, 
	  14239      { 2   , 1 }, 
	  14240      { 1   , 1 }
	  14241    },
	  14242    { 
	  14243      { 256 , 64 }, 
	  14244      { 128 , 32 }, 
	  14245      { 64  , 16 }, 
	  14246      { 32  , 8 }, 
	  14247      { 16  , 4 }, 
	  14248      { 8   , 2 },
	  14249      { 4   , 1 }, 
	  14250      { 2   , 1 }, 
	  14251      { 1   , 1 }
	  14252    } ,
	  14253    { 

DITEX                           Source Listing                   9-MAY-2021 23:42:47  VSI C V7.4-002-50R2O              Page 4
V1.0                                                             9-MAY-2021 05:20:33  ditex.c;3

	  14254      { 256 , 128 }, 
	  14255      { 128 , 64 }, 
	  14256      { 64  , 32 }, 
	  14257      { 32  , 16 },
	  14258      { 16  , 8 },
	  14259      { 8   , 4 }, 
	  14260      { 4   , 2 }, 
	  14261      { 2   , 1 }, 
	  14262      { 1   , 1 }
	  14263    },
	  14264    { 
	  14265      { 256 , 256 }, 
	  14266      { 128 , 128 }, 
	  14267      { 64  , 64 },
	  14268      { 32  , 32 },
	  14269      { 16  , 16 },
	  14270      { 8   , 8 }, 
	  14271      { 4   , 4 }, 
	  14272      { 2   , 2 }, 
	  14273      { 1   , 1 }
	  14274    },
	  14275    { 
	  14276      { 128, 256 },
	  14277      { 64,  128 },
	  14278      { 32,  64  },
	  14279      { 16,  32  },
	  14280      { 8,   16  }, 
	  14281      { 4,   8   }, 
	  14282      { 2,   4   }, 
	  14283      { 1,   2   }, 
	  14284      { 1,   1 }
	  14285    },
	  14286    {
	  14287      { 64,  256 },
	  14288      { 32,  128 },
	  14289      { 16,  64  },
	  14290      { 8,   32  },
	  14291      { 4,   16  },
	  14292      { 2,   8   }, 
	  14293      { 1,   4   }, 
	  14294      { 1,   2   }, 
	  14295      { 1,   1 }
	  14296    },
	  14297    { 
	  14298      { 32,  256 },
	  14299      { 16,  128 },
	  14300      { 8,   64  },
	  14301      { 4,   32  },
	  14302      { 2,   16  },
	  14303      { 1,   8   }, 
	  14304      { 1,   4   }, 
	  14305      { 1,   2   },
	  14306      { 1,   1 }
	  14307    }
	  14308 };
	  14309 
	  14310 /* translates GR_ASPECT_* to bits for the TLOD register */

DITEX                           Source Listing                   9-MAY-2021 23:42:47  VSI C V7.4-002-50R2O              Page 5
V1.0                                                             9-MAY-2021 05:20:33  ditex.c;3

	  14311 const FxU32 _gr_aspect_xlate_table[] =
	  14312 {
	  14313    (3<< SST_LOD_ASPECT_SHIFT) | SST_LOD_S_IS_WIDER,
	  14314    (2<< SST_LOD_ASPECT_SHIFT) | SST_LOD_S_IS_WIDER,
	  14315    (1<< SST_LOD_ASPECT_SHIFT) | SST_LOD_S_IS_WIDER,
	  14316     0<< SST_LOD_ASPECT_SHIFT,
	  14317     1<< SST_LOD_ASPECT_SHIFT,
	  14318     2<< SST_LOD_ASPECT_SHIFT,
	  14319     3<< SST_LOD_ASPECT_SHIFT
	  14320 };
	  14321 
	  14322 const FxU32 _gr_evenOdd_xlate_table[] = 
	  14323 {
	  14324   0xFFFFFFFF,                      /* invalid */
	  14325   SST_LOD_TSPLIT,                  /* even */
	  14326   SST_LOD_TSPLIT | SST_LOD_ODD,    /* odd  */
	  14327   0,                               /* both */
	  14328 };
	  14329 
	  14330 /* the size of each mipmap level in texels, 4 is the minimum no matter what */
	  14331 /* index is [aspect_ratio][lod]                                             */
	  14332 static const FxU32 _grMipMapSize[4][16] = {
	  14333   {   /* 8:1 aspect ratio */
	  14334     0x02000,        /* 0 : 256x32   */
	  14335     0x00800,        /* 1 : 128x16   */
	  14336     0x00200,        /* 2 :  64x8    */
	  14337     0x00080,        /* 3 :  32x4    */
	  14338     0x00020,        /* 4 :  16x2    */
	  14339     0x00010,        /* 5 :   8x1    */
	  14340     0x00008,        /* 6 :   4x1    */
	  14341     0x00004,        /* 7 :   2x1    */
	  14342     0x00004,        /* 8 :   1x1    */
	  14343   },
	  14344   {   /* 4:1 aspect ratio */
	  14345     0x04000,        /* 0 : 256x64   */
	  14346     0x01000,        /* 1 : 128x32   */
	  14347     0x00400,        /* 2 :  64x16   */
	  14348     0x00100,        /* 3 :  32x8    */
	  14349     0x00040,        /* 4 :  16x4    */
	  14350     0x00010,        /* 5 :   8x2    */
	  14351     0x00008,        /* 6 :   4x1    */
	  14352     0x00004,        /* 7 :   2x1    */
	  14353     0x00004,        /* 8 :   1x1    */
	  14354   },
	  14355   {   /* 2:1 aspect ratio */
	  14356     0x08000,        /* 0 : 256x128  */
	  14357     0x02000,        /* 1 : 128x64   */
	  14358     0x00800,        /* 2 :  64x32   */
	  14359     0x00200,        /* 3 :  32x16   */
	  14360     0x00080,        /* 4 :  16x8    */
	  14361     0x00020,        /* 5 :   8x4    */
	  14362     0x00008,        /* 6 :   4x2    */
	  14363     0x00004,        /* 7 :   2x1    */
	  14364     0x00004,        /* 8 :   1x1    */
	  14365   },
	  14366   {   /* 1:1 aspect ratio */
	  14367     0x10000,        /* 0 : 256x256  */

DITEX                           Source Listing                   9-MAY-2021 23:42:47  VSI C V7.4-002-50R2O              Page 6
V1.0                                                             9-MAY-2021 05:20:33  ditex.c;3

	  14368     0x04000,        /* 1 : 128x128  */
	  14369     0x01000,        /* 2 :  64x64   */
	  14370     0x00400,        /* 3 :  32x32   */
	  14371     0x00100,        /* 4 :  16x16   */
	  14372     0x00040,        /* 5 :   8x8    */
	  14373     0x00010,        /* 6 :   4x4    */
	  14374     0x00004,        /* 7 :   2x2    */
	  14375     0x00004,        /* 8 :   1x1    */
	  14376   },
	  14377 };
	  14378 
	  14379 
	  14380 /* the offset from mipmap level 0 of each mipmap level in texels            */
	  14381 /* index is [aspect_ratio][lod]                                             */
	  14382 static FxU32 _grMipMapOffset[4][16];
	  14383 static FxU32 _grMipMapOffset_Tsplit[4][16];
	  14384 
	  14385 /* initialize the MipMap Offset arrays */
	  14386 void
	  14387 _grMipMapInit(void)
      1	  14388 {
      1	  14389   int ar,lod;
      1	  14390 
      2	  14391   for (ar=0; ar<4; ar++) {              /* for each aspect ratio           */
      2	  14392     _grMipMapOffset[ar][0] = 0;         /* start off with offset=0         */
      3	  14393     for (lod=1; lod<=9; lod++) {        /* for each lod, add in prev size */
      3	  14394       _grMipMapOffset[ar][lod] = _grMipMapOffset[ar][lod-1] +
      3	  14395         _grMipMapSize[ar][lod-1];
      2	  14396     }
      2	  14397     _grMipMapOffset_Tsplit[ar][0] = 0;  /* start off with offset=0 */
      2	  14398     _grMipMapOffset_Tsplit[ar][1] = 0;  /* start off with offset=0 */
      3	  14399     for (lod=2; lod<=9; lod++) {        /* for each lod, add in prev size */
      3	  14400       _grMipMapOffset_Tsplit[ar][lod] = _grMipMapOffset_Tsplit[ar][lod-2] +
      3	  14401         _grMipMapSize[ar][lod-2];
      2	  14402     }
      1	  14403   }
      1	  14404 } /* _grMipMapInit */
	  14405 
	  14406 /*---------------------------------------------------------------------------
	  14407 **  This is not DI anymore.  Perhaps all of these size routines need
	  14408 **  to be in gtex.c now.
	  14409 */
	  14410 FxU32
	  14411 _grTexTextureMemRequired( GrLOD_t small_lod, GrLOD_t large_lod, 
	  14412                            GrAspectRatio_t aspect, GrTextureFormat_t format,
	  14413                            FxU32 evenOdd )
      1	  14414 {
      1	  14415   FxU32 memrequired;
      1	  14416 
      1	  14417   GR_CHECK_W("_grTexTextureMemRequired", small_lod < large_lod,
      1	  14418                  "small_lod bigger than large_lod" );
      1	  14419   GR_CHECK_F( "_grTexTextureMemRequired", evenOdd >  GR_MIPMAPLEVELMASK_BOTH || evenOdd == 0, 
      1	  14420               "invalid evenOdd mask" );
      1	  14421 
      1	  14422   /* mirror aspect ratios         */
      1	  14423   if ( aspect > GR_ASPECT_1x1 ) aspect = GR_ASPECT_1x8 - aspect;
      1	  14424 

DITEX                           Source Listing                   9-MAY-2021 23:42:47  VSI C V7.4-002-50R2O              Page 7
V1.0                                                             9-MAY-2021 05:20:33  ditex.c;3

      2	  14425   if ( evenOdd == GR_MIPMAPLEVELMASK_BOTH ) {
      2	  14426     memrequired  = _grMipMapOffset[aspect][small_lod+1];
      2	  14427     memrequired -= _grMipMapOffset[aspect][large_lod];
      2	  14428   } else {
      2	  14429     memrequired = 0;
      2	  14430     /* construct XOR mask   */
      2	  14431     evenOdd = (evenOdd == GR_MIPMAPLEVELMASK_EVEN);
      3	  14432     while (large_lod <= small_lod) {    /* sum up all the mipmap levels */
      3	  14433       if ((large_lod ^ evenOdd) & 1)    /* that match the XOR mask      */
      3	  14434         memrequired += _grMipMapSize[aspect][large_lod];
      3	  14435       large_lod++;
      2	  14436     }
      1	  14437   }
      1	  14438 
      1	  14439   if ( format >= GR_TEXFMT_16BIT )      /* convert from texels to bytes */
      1	  14440     memrequired <<= 1;                  /* 2 bytes per texel            */
      1	  14441 
      1	  14442   memrequired += 7;                     /* round up to 8 byte boundary  */
      1	  14443   memrequired &= ~7;
      1	  14444   return memrequired;
      1	  14445 } /* _grTexTextureMemRequired */
	  14446 
	  14447 FxU16
	  14448 _grTexFloatLODToFixedLOD( float value )
      1	  14449 {
      1	  14450   float num_quarters;
      1	  14451   int   new_value;
      1	  14452 
      1	  14453   num_quarters = ( value + .125F ) / .25F;
      1	  14454   new_value    = ( int ) num_quarters;
      1	  14455 
      1	  14456   new_value   &= 0x003F;
      1	  14457 
      1	  14458   return new_value;
      1	  14459 } /* _grTexFloatLODToFixedLOD */
	  14460 
	  14461 /*---------------------------------------------------------------------------
	  14462 ** _grTexCalcBaseAddress
	  14463 */
	  14464 FxU32
	  14465 _grTexCalcBaseAddress( FxU32 start, GrLOD_t large_lod,
	  14466                        GrAspectRatio_t aspect, GrTextureFormat_t format,
	  14467                        FxU32 odd_even_mask )
      1	  14468 {
      1	  14469   FxU32 sum_of_lod_sizes;
      1	  14470 
      1	  14471   /* mirror aspect ratios         */
      1	  14472   if ( aspect > GR_ASPECT_1x1 ) aspect = GR_ASPECT_1x8 - aspect;
      1	  14473 
      1	  14474   if ( odd_even_mask == GR_MIPMAPLEVELMASK_BOTH )
      1	  14475     sum_of_lod_sizes = _grMipMapOffset[aspect][large_lod];
      2	  14476   else {
      2	  14477     if (((odd_even_mask == GR_MIPMAPLEVELMASK_EVEN) && (large_lod & 1)) ||
      2	  14478         ((odd_even_mask == GR_MIPMAPLEVELMASK_ODD) && !(large_lod & 1)))
      2	  14479       large_lod += 1;
      2	  14480     sum_of_lod_sizes = _grMipMapOffset_Tsplit[aspect][large_lod];
      1	  14481   }

DITEX                           Source Listing                   9-MAY-2021 23:42:47  VSI C V7.4-002-50R2O              Page 8
V1.0                                                             9-MAY-2021 05:20:33  ditex.c;3

      1	  14482     
      1	  14483   if ( format >= GR_TEXFMT_16BIT ) sum_of_lod_sizes <<= 1;
      1	  14484 
      1	  14485   return ( start - sum_of_lod_sizes );
      1	  14486 } /* _grTexCalcBaseAddress */
	  14487 
	  14488 /*---------------------------------------------------------------------------
	  14489 ** grTexCalcMemRequired
	  14490 */
	  14491 GR_DIENTRY(grTexCalcMemRequired, FxU32,
	  14492            ( GrLOD_t small_lod, GrLOD_t large_lod, 
	  14493             GrAspectRatio_t aspect, GrTextureFormat_t format ))
      1	  14494 {
      1	  14495   const FxU32 memrequired  = _grTexTextureMemRequired(small_lod, large_lod, 
      1	  14496                                                       aspect, format,
      1	  14497                                                       GR_MIPMAPLEVELMASK_BOTH );
      1	  14498 
      1	  14499   GDBG_INFO(88,"grTexCalcMemRequired(%d,%d,%d,%d) => 0x%x(%d)\n",
      1	  14500                 small_lod,large_lod,aspect,format,memrequired,memrequired);
      1	  14501 
      1	  14502   return memrequired;
      1	  14503 } /* grTexCalcMemRequired */
	  14504 
	  14505 
	  14506 /*---------------------------------------------------------------------------
	  14507 ** grTexDetailControl
	  14508 */
	  14509 GR_DIENTRY(grTexDetailControl, void,
	  14510            ( GrChipID_t tmu, int lod_bias, FxU8 detail_scale,
	  14511             float detail_max ))
      1	  14512 {
      1	  14513 #define FN_NAME "grTexDetailControl"
      1	  14514   FxU32 tDetail;
      1	  14515   FxU32 dmax    = ( FxU32 ) ( detail_max * _GlideRoot.pool.f255 );
      1	  14516   FxU32 dscale  = detail_scale;
      1	  14517   
      1	  14518   GR_BEGIN_NOFIFOCHECK("grTexDetailControl",88);
      1	  14519   GDBG_INFO_MORE(gc->myLevel,"(%d,%d,%g)\n",tmu,detail_scale,detail_max);
      1	  14520   GR_CHECK_TMU( FN_NAME, tmu );
      1	  14521   GR_CHECK_F( myName, lod_bias < -32 || lod_bias > 31, "lod_bias out of range" );
      1	  14522   GR_CHECK_F( myName, detail_scale > 7, "detail_scale out of range" );
      1	  14523   GR_CHECK_F( myName, detail_max < 0.0 || detail_max > 1.0, "detail_max out of range" );
      1	  14524 
      1	  14525   tDetail  = ( ( lod_bias << SST_DETAIL_BIAS_SHIFT ) & SST_DETAIL_BIAS );
      1	  14526   tDetail |= ( ( dmax << SST_DETAIL_MAX_SHIFT ) & SST_DETAIL_MAX );
      1	  14527   tDetail |= ( ( dscale << SST_DETAIL_SCALE_SHIFT ) & SST_DETAIL_SCALE );
      1	  14528   
      1	  14529   /* MULTIPLAT */
      1	  14530   _grTexDetailControl( tmu, tDetail );
      1	  14531   GR_END();
      1	  14532 #undef FN_NAME
      1	  14533 } /* grTexDetailControl */
	  14534 
	  14535 GR_DIENTRY(grTexMinAddress, FxU32, ( GrChipID_t tmu ))
      1	  14536 {
      1	  14537 #define FN_NAME "grTexMinAddress"
      1	  14538   GR_BEGIN_NOFIFOCHECK("grTexMinAddress",88);

DITEX                           Source Listing                   9-MAY-2021 23:42:47  VSI C V7.4-002-50R2O              Page 9
V1.0                                                             9-MAY-2021 05:20:33  ditex.c;3

      1	  14539   GDBG_INFO_MORE(gc->myLevel,"(%d)\n",tmu);
      1	  14540   GR_CHECK_TMU(FN_NAME, tmu);
      1	  14541   FXUNUSED( tmu );
      1	  14542   GR_RETURN(0);
      1	  14543 #undef FN_NAME
      1	  14544 } /* grTexMinAddress */
	  14545 
	  14546 
	  14547 /*-------------------------------------------------------------------
	  14548   Function: grTexMaxAddress
	  14549   Date: 6/2
	  14550   Implementor(s): GaryT
	  14551   Library: glide
	  14552   Description:
	  14553     Returns address of maximum extent of texture ram for a given TMU
	  14554   Arguments:
	  14555     tmu
	  14556   Return:
	  14557     the largest valid texture start Address
	  14558   -------------------------------------------------------------------*/
	  14559 GR_DIENTRY(grTexMaxAddress, FxU32, ( GrChipID_t tmu ))
      1	  14560 {
      1	  14561 #define FN_NAME "grTexMaxAddress"
      1	  14562   GR_BEGIN_NOFIFOCHECK("grTexMaxAddress",88);
      1	  14563   GDBG_INFO_MORE(gc->myLevel,"(%d)\n",tmu);
      1	  14564   GR_CHECK_TMU(FN_NAME, tmu );
      1	  14565   GR_RETURN(gc->tmu_state[tmu].total_mem-8);
      1	  14566 #undef FN_NAME
      1	  14567 } /* grTexMaxAddress */
	  14568 
	  14569 
	  14570 /*-------------------------------------------------------------------
	  14571   Function: grTexTextureMemRequired
	  14572   Date: 6/2
	  14573   Implementor(s): GaryMcT, Jdt
	  14574   Library: glide
	  14575   Description:
	  14576     Returns the tmu memory required to store the specified mipmap    
	  14577     ( Gary and I don't like the name of this function, but are 
	  14578       a little backed into a corner because of the existence 
	  14579       of grTexMemRequired() which does not imply any distinction
	  14580       between texture memory and system ram )
	  14581   Arguments:
	  14582     evenOdd  - which set of mipmap levels are to be stored
	  14583                 One of:
	  14584                   GR_MIPMAPLEVELMASK_EVEN 
	  14585                   GR_MIPMAPLEVELMASK_ODD
	  14586                   GR_MIPMAPLEVELMASK_BOTH
	  14587     info      - pointer to GrTexInfo structure defining dimensions
	  14588                 of texture
	  14589   Return:
	  14590     offset to be added to current texture base address to calculate next 
	  14591     valid texture memory download location
	  14592   -------------------------------------------------------------------*/
	  14593 GR_DIENTRY(grTexTextureMemRequired, FxU32,
	  14594            ( FxU32 evenOdd, GrTexInfo *info))
      1	  14595 {

DITEX                           Source Listing                   9-MAY-2021 23:42:47  VSI C V7.4-002-50R2O              Page 10
V1.0                                                             9-MAY-2021 05:20:33  ditex.c;3

      1	  14596   FxU32 memrequired;
      1	  14597 
      1	  14598   GR_CHECK_F( "grTexTextureMemRequired", !info, "invalid info pointer" );
      1	  14599   memrequired = _grTexTextureMemRequired(info->smallLod,
      1	  14600                                          info->largeLod,
      1	  14601                                          info->aspectRatio,
      1	  14602                                          info->format,
      1	  14603                                          evenOdd );
      1	  14604                         
      1	  14605   GDBG_INFO(88,"grTexTextureMemRequired(%d,0x%x) => 0x%x(%d)\n",
      1	  14606                 evenOdd,info,memrequired,memrequired);
      1	  14607   return memrequired;
      1	  14608 } /* grTexTextureMemRequired */
	  14609 
	  14610 
	  14611 /*-------------------------------------------------------------------
	  14612   Function: grTexDownloadMipMap
	  14613   Date: 6/2
	  14614   Implementor(s): GaryMcT, Jdt
	  14615   Library: glide
	  14616   Description:
	  14617     Downloads a texture mipmap to the specified tmu at the specified
	  14618     base address.
	  14619   Arguments:
	  14620     tmu          - which tmu
	  14621     startAddress - starting address for texture download,
	  14622     evenOdd  - which set of mipmap levels have been downloaded for
	  14623                 the selected texture
	  14624                 One of:
	  14625                   GR_MIPMAPLEVELMASK_EVEN
	  14626                   GR_MIPMAPLEVELMASK_ODD
	  14627                   GR_MIPMAPLEVELMASK_BOTH
	  14628     info       - pointer to GrTexInfo structure defining dimension of
	  14629                  texture to be downloaded and containing texture data
	  14630   Return:
	  14631     none
	  14632   -------------------------------------------------------------------*/
	  14633 GR_DIENTRY(grTexDownloadMipMap, void, 
	  14634            ( GrChipID_t tmu, FxU32 startAddress, FxU32
	  14635             evenOdd, GrTexInfo  *info ))
      1	  14636 {
      1	  14637   GR_DCL_GC;
      1	  14638   GrLOD_t lod;
      1	  14639   char *src_base;
      1	  14640   FxU32 size = grTexTextureMemRequired( evenOdd, info );
      1	  14641 
      1	  14642   FXUNUSED(gc);
      1	  14643 
      1	  14644   GDBG_INFO(89,"grTexDownloadMipMap(%d,0x%x,%d,0x%x\n",tmu,startAddress,evenOdd,info);
      1	  14645   GR_CHECK_TMU( "grTexDownloadMipMap", tmu );
      1	  14646   GR_CHECK_COMPATABILITY("grTexDownloadMipMap", 
      1	  14647                          startAddress + size > gc->tmu_state[tmu].total_mem,
      1	  14648                          "insufficient texture ram at startAddress" );
      1	  14649   GR_CHECK_F( "grTexDownloadMipMap", evenOdd > 0x3, "evenOdd mask invalid" );
      1	  14650   GR_CHECK_F( "grTexDownloadMipMap", !info, "info invalid" );
      1	  14651   
      2	  14652   if ((startAddress < 0x200000) && (startAddress + size > 0x200000)) {

DITEX                           Source Listing                   9-MAY-2021 23:42:47  VSI C V7.4-002-50R2O              Page 11
V1.0                                                             9-MAY-2021 05:20:33  ditex.c;3

      2	  14653     GR_CHECK_COMPATABILITY("grTexDownloadMipMap",
      2	  14654                            ((startAddress < 0x200000UL) && (startAddress + size > 0x200000UL)),
      2	  14655                            "mipmap cannot span 2 MB boundary");
      2	  14656     GrErrorCallback("grTexDownloadMipMap: mipmap cannot span 2 Mbyte boundary", FXTRUE);
      1	  14657   }
      1	  14658 
      1	  14659   src_base = (char *)info->data;
      1	  14660   
      1	  14661   /*---------------------------------------------------------------
      1	  14662     Download one mipmap level at a time
      1	  14663     ---------------------------------------------------------------*/
      2	  14664   for(lod = info->largeLod; lod <= info->smallLod; lod++ ) {
      2	  14665     grTexDownloadMipMapLevel( tmu, 
      2	  14666                               startAddress, 
      2	  14667                               lod,
      2	  14668                               info->largeLod,
      2	  14669                               info->aspectRatio,
      2	  14670                               info->format,
      2	  14671                               evenOdd,
      2	  14672                               src_base );
      2	  14673                
      2	  14674     src_base += (_grMipMapHostSize[_gr_aspect_index_table[info->aspectRatio]][lod] << 
      2	  14675                  (info->format >= GR_TEXFMT_16BIT));
      1	  14676   }
      1	  14677 } /* grTexDownloadMipMap */
	  14678 
	  14679 
	  14680 /*-------------------------------------------------------------------
	  14681   Function: grTexDownloadTablePartial
	  14682   Date: 6/3
	  14683   Implementor(s): GaryT
	  14684   Library: glide
	  14685   Description:
	  14686     download part of a look up table data to a tmu
	  14687   Arguments:
	  14688     tmu - which tmu
	  14689     type - what type of table to download
	  14690         One of:
	  14691             GR_TEXTABLE_NCC0
	  14692             GR_TEXTABLE_NCC1
	  14693             GR_TEXTABLE_PALETTE
	  14694     void *data - pointer to table data
	  14695   Return:
	  14696     none
	  14697   -------------------------------------------------------------------*/
	  14698 GR_DIENTRY(grTexDownloadTablePartial, void,
	  14699            ( GrChipID_t tmu, GrTexTable_t type, 
	  14700             void *data, int start, int end ))
      1	  14701 {
      1	  14702 #define FN_NAME "grTexDownloadTablePartial"
      1	  14703   GR_BEGIN_NOFIFOCHECK("grTexDownloadTablePartial",89);
      1	  14704   GDBG_INFO_MORE(gc->myLevel,"(%d,%d,0x%x, %d,%d)\n",tmu,type,data,start,end);
      1	  14705   GR_CHECK_TMU(FN_NAME,tmu);
      1	  14706   GR_CHECK_F(myName, type > 0x2, "invalid table specified");
      1	  14707   GR_CHECK_F(myName, !data, "invalid data pointer");
      1	  14708 
      1	  14709   if ( type == GR_TEXTABLE_PALETTE )     /* Need Palette Download Code */

DITEX                           Source Listing                   9-MAY-2021 23:42:47  VSI C V7.4-002-50R2O              Page 12
V1.0                                                             9-MAY-2021 05:20:33  ditex.c;3

      1	  14710     _grTexDownloadPalette( tmu, (GuTexPalette *)data, start, end );
      2	  14711   else {                                 /* Type is an ncc table */
      2	  14712     _grTexDownloadNccTable( tmu, type, (GuNccTable*)data, start, end );
      2	  14713     /* Removed redundant call
      2	  14714      * _grTexDownloadNccTable( tmu, type, (GuNccTable*)data, start, end ); 
      2	  14715      */
      1	  14716   }
      1	  14717   GR_END();
      1	  14718 #undef FN_NAME
      1	  14719 } /* grTexDownloadTable */
	  14720 
	  14721 /*---------------------------------------------------------------------------
	  14722 ** grTexDownloadMipMapLevel
	  14723 */
	  14724 GR_DIENTRY(grTexDownloadMipMapLevel, void, 
	  14725            ( GrChipID_t tmu, FxU32 startAddress, GrLOD_t thisLod,
	  14726             GrLOD_t largeLod, GrAspectRatio_t aspectRatio,
	  14727             GrTextureFormat_t format, FxU32 evenOdd, void *data )) 
      1	  14728 {
      1	  14729   GR_BEGIN_NOFIFOCHECK("grTexDownloadMipMapLevel",89);
      1	  14730   GDBG_INFO_MORE(gc->myLevel,"(%d,0x%x, %d,%d,%d, %d,%d 0x%x)\n",
      1	  14731                   tmu,startAddress,thisLod,largeLod,aspectRatio,
      1	  14732                   format,evenOdd,data);
      1	  14733   /*
      1	  14734   ** note for glide3 lod translation:
      1	  14735   ** we are calling gr* routine so the lod data should remain the same 
      1	  14736   */
      1	  14737   grTexDownloadMipMapLevelPartial( tmu, startAddress,
      1	  14738                                    thisLod, largeLod, 
      1	  14739                                    aspectRatio, format,
      1	  14740                                    evenOdd, data,
      1	  14741                                    0, _grMipMapHostWH[aspectRatio][thisLod][1] - 1 );
      1	  14742   GR_END();
      1	  14743 } /* grTexDownloadMipmapLevel */
	  14744 
	  14745 FxU16 rle_line[256];
	  14746 FxU16 *rle_line_end;
	  14747 
	  14748 #if (GLIDE_PLATFORM & (GLIDE_OS_WIN32 | GLIDE_OS_MACOS | GLIDE_OS_UNIX) | GLIDE_OS_OPENVMS) || defined(__DJGPP__)
	  14749 void rle_decode_line_asm(FxU16 *tlut,FxU8 *src,FxU16 *dest)
      1	  14750 {
      1	  14751    /* don't do anything just shut up the compiler */
      1	  14752 }
	  14753 #endif


Command Line
------- ----

CC/DEBUG/NOOP/LIST=[.OUT.DEBUG.OBJ.GLIDE.GLIDE2X.CVG.GLIDE.SRC]DITEX/OBJECT=[.O
UT.DEBUG.OBJ.GLIDE.GLIDE2X.CVG.GLIDE.SRC]DITEX.OBJ/INCLUDE_DIRECTORY=([.GLIDE.S
WLIBS.FXMISC],[.GLIDE.GLIDE2X.CVG.INCSRC],[.GLIDE.GLIDE2X.CVG.GLIDE.SRC],[.GLID
E.GLIDE2X.CVG.INIT],[.GLIDE.SWLIBS.NEWPCI.PCILIB])/DEFINE=(CVG,GLIDE_USE_C_TRIS
ETUP,GLIDE_HW_TRI_SETUP=1,GLIDE_TRI_CULLING=1,GLIDE_DEFAULT_GAMMA=1.3F,GLIDE_LI
B=1) [.GLIDE.GLIDE2X.CVG.GLIDE.SRC]DITEX.C

Hardware: /ARCHITECTURE=GENERIC /OPTIMIZE=TUNE=GENERIC

DITEX                           Source Listing                   9-MAY-2021 23:42:47  VSI C V7.4-002-50R2O              Page 13
V1.0                                                             9-MAY-2021 05:20:33  ditex.c;3


These macros are in effect at the start of the compilation.
----- ------ --- -- ------ -- --- ----- -- --- ------------

 __G_FLOAT=1  __DECC=1  vms=1  VMS=1  __32BITS=1  __PRAGMA_ENVIRONMENT=1 
 __CRTL_VER=80400000  __vms_version="V8.4-2L1"  CC$gfloat=1  __X_FLOAT=1 
 GLIDE_HW_TRI_SETUP=1  GLIDE_USE_C_TRISETUP=1  vms_version="V8.4-2L1" 
 __DATE__="May  9 2021"  __STDC_VERSION__=199901L  __DECC_MODE_RELAXED=1 
 __DECC_VER=70490002  __VMS=1  GLIDE_DEFAULT_GAMMA=1.3F  GLIDE_LIB=1 
 __ALPHA=1  VMS_VERSION="V8.4-2L1"  __IEEE_FLOAT=0  __VMS_VERSION="V8.4-2L1" 
 __TIME__="23:42:47"  __Alpha_AXP=1  __VMS_VER=80421222 
 __BIASED_FLT_ROUNDS=2  CVG=1  __INITIAL_POINTER_SIZE=0  __STDC__=2 
 __LANGUAGE_C__=1  __vms=1  __alpha=1  __D_FLOAT=0  GLIDE_TRI_CULLING=1 

